{
  "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-traditional\" data-lake-element=\"root\"><h2 id=\"3d17c1d3\" data-lake-id=\"b3a9c828ffc3c6040c894601e5b212bd\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">Nginx的模块与工作原理</h2><p data-lake-id=\"5c916c52fada8b883cf7371a73412640\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"747f33505e45a86b2ca44680ee9b00e4\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">Nginx由<strong>内核</strong>和<strong>模块</strong>组成，其中，内核的设计非常微小和简洁，完成的工作也非常简单，仅仅通过查找配置文件将客户端请求映射到一个location block（location是Nginx配置中的一个指令，用于URL匹配），而在这个<span style=\"color: #F5222D;\">location</span>中所配置的每个指令将会启动不同的模块去完成相应的工作。</p><p data-lake-id=\"cab247e7de826739656623f63c09e076\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"7da10f49648590694f02689d5bb180de\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">Nginx的模块从结构上分为核心模块、基础模块和第三方模块：</p><p data-lake-id=\"9a68aac9a3c597cfa45d4ae826891f0e\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"c454aac9\" data-language=\"plain\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">核心模块：HTTP模块、EVENT模块和MAIL模块\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">基础模块：HTTP Access模块、HTTP FastCGI模块、HTTP Proxy模块和HTTP Rewrite模块，\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">第三方模块：HTTP Upstream Request Hash模块、Notice模块和HTTP Access Key模块。</span></span></pre></div></div></div><p data-lake-id=\"2c9979f195d6c4d5ba5422fe040f9ede\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"730833308d454c7741725d61b7f99505\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">Nginx的模块从功能上分为如下三类。</p><p class=\"lake-lineheight-2\" data-lake-id=\"4548427f5402183fbf9765b75bf17ef4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"9339eb95ad4638f1238c8622d327374e\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"background-color: #FADB14;\">Handlers（处理器模块）</span>。此类模块直接处理请求，并进行输出内容和修改headers信息等操作。Handlers处理器模块一般只能有一个。</p><p data-lake-id=\"ce7a9db97a9515fe68161cbca1a207f8\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"661cfc4fe6db4a74927d34f716d6837c\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"background-color: #FADB14;\">Filters （过滤器模块）</span>。此类模块主要对其他处理器模块输出的内容进行修改操作，最后由Nginx输出。</p><p data-lake-id=\"c8fdc4fc8e5b55f5686b61130364072b\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"e064f7d9b3764aa281a461ba1e3f9af0\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"background-color: #FADB14;\">Proxies （代理类模块）</span>。此类模块是Nginx的HTTP Upstream之类的模块，这些模块主要与后端一些服务比如FastCGI等进行交互，实现服务代理和负载均衡等功能。</p><p data-lake-id=\"a2757e53f1bbbf8391d850cdfe379ee3\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"73cb2e9244f31eb962c76999cb434075\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">下图展示了Nginx模块常规的HTTP请求和响应的过程。</p><p data-lake-id=\"ce6787f153f059052cefbacc40dc26d2\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/491128/1586615900536-0a8270f9-0aaf-4953-8d82-e9b5236453d1.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/491128/1586615900536-0a8270f9-0aaf-4953-8d82-e9b5236453d1.png\" class=\"image lake-drag-image\" style=\"visibility: visible; width: 541px; height: 410px;\"></span></p><p data-lake-id=\"269e4e8d318c422a5ad3dd7d1d112824\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h2 id=\"eebf3dbe\" data-lake-id=\"bdfda4455c66a76352ed207e84ad883c\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">Nginx的进程模型<span style=\"color: #3E3E3E;\"><br></span></h2><p data-lake-id=\"aa5b66f1891079a574224ca870d7ea9a\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"dde4b4698e79dacb9bdc51ab1bec8fc8\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">Nginx在启动后，会有一个master进程和多个work</span><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">er进程，</span><span class=\"lake-fontsize-1515\" style=\"color: rgb(62, 62, 62); font-size: 15px;\" data-mce-style=\"font-size: 15px\">每个worker里面只有一个主线程</span><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">。</span></p><p data-lake-id=\"3b5505991494270ca50ca69841799160\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 data-lake-id=\"13c023fb3693cdd3fbe58946417f4eb1\" id=\"wTgCp\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">master进程</h3><p data-lake-id=\"be1c495b64905168cd3081f8642a5b81\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"7b687c80d405743d71d978eb4c9e24c3\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">主要</span><span class=\"lake-fontsize-1515\" style=\"color: rgb(245, 34, 45); font-size: 15px;\" data-mce-style=\"font-size: 15px\">用来管理worker进程</span><span class=\"lake-fontsize-1515\" style=\"color: rgb(245, 34, 45); font-size: 15px;\" data-mce-style=\"font-size: 15px\">，不做任何请求处理工作</span><span class=\"lake-fontsize-1515\" style=\"color: rgb(245, 34, 45); font-size: 15px;\" data-mce-style=\"font-size: 15px\">。master进程杀死后，worker进程仍然可以正常处理请求。</span><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">master进程功能包含：接收来自外界的信号，向各worker进程发送信号，监控worker进程的运行状态，当worker进程退出后(异常情况下)，会自动重新启动新的worker进程。</span></p><p data-lake-id=\"8237122fea95ad446a5af85b34648a4c\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"660d4e5fe4ef94c0c8d5db5bd59d2e3d\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">master进程充当整个进程组与用户的交互接口，同时对进程进行监护。它不需要处理网络事件，不负责业务的执行，只会通过管理worker进程来实现重启服务、平滑升级、更换日志文件、配置文件实时生效等功能。</span></p><p data-lake-id=\"a27cb02899df679b7fe2d398083a79dc\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"d3b5641f368ba94fa0452da6402336a7\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">我们要控制nginx，只需要通过kill向master进程发送信号就行了。比如kill -HUP pid，则是告诉nginx，从容地重启nginx，我们一般用这个信号来重启nginx，或重新加载配置，因为是从容地重启，因此服务是不中断的。master进程在接收到HUP信号后是怎么做的呢？首先master进程在接到信号后，会先重新加载配置文件，然后再启动新的worker进程，并向所有老的worker进程发送信号，告诉他们可以光荣退休了。新的worker在启动后，就开始接收新的请求，而老的worker在收到来自master的信号后，就不再接收新的请求，并且在当前进程中的所有未处理完的请求处理完成后，再退出。当然，直接给master进程发送信号，这是比较老的操作方式，nginx在0.8版本之后，引入了一系列命令行参数，来方便我们管理。比如，./nginx -s reload，就是来重启nginx，./nginx -s stop，就是来停止nginx的运行。如何做到的呢？我们还是拿reload来说，我们看到，执行命令时，我们是启动一个新的nginx进程，而新的nginx进程在解析到reload参数后，就知道我们的目的是控制nginx来重新加载配置文件了，它会向master进程发送信号，然后接下来的动作，就和我们直接向master进程发送信号一样了。</span></p><p data-lake-id=\"5d62a3edc34671c007b00353cb2d9843\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 data-lake-id=\"2d8cae44e0013a2a494af558943739ae\" id=\"OVITs\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">worker进程：</h3><p data-lake-id=\"20a7849d1c118f49ca7c9fb381c4daa7\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"1d0d66837070511187df30e15bba3a09\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">而基本的网络事件，则是放在worker进程中来处理了。多个worker进程之间是对等的，他们同等竞争来自客户端的请求，各进程互相之间是独立的。一个请求，只可能在一个worker进程中处理，一个worker进程，不可能处理其它进程的请求。worker进程的个数是可以设置的，一般我们会设置与机器cpu核数一致，这里面的原因与nginx的进程模型以及事件处理模型是分不开的。</span></p><p data-lake-id=\"a456c0fc130904df09abf6516a807646\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"e6b73c964201a2aec9fb403ca18c0c0b\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">worker进程之间是平等的，每个进程，处理请求的机会也是一样的。当我们提供80端口的http服务时，一个连接请求过来，每个进程都有可能处理这个连接，怎么做到的呢？首先，</span><span class=\"lake-fontsize-1515\" style=\"color: rgb(245, 34, 45); font-size: 15px;\" data-mce-style=\"font-size: 15px\">每个worker进程都是从master进程fork过来</span><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">，在master进程里面，先建立好需要listen的socket（listenfd）之后，然后再fork出多个worker进程。所有worker进程的listenfd会在新连接到来时变得可读，为保证只有一个进程处理该连接，所有worker进程在注册listenfd读事件前抢accept_mutex，抢到互斥锁的那个进程注册listenfd读事件，在读事件里调用accept接受该连接。当一个worker进程在accept这个连接之后，就开始读取请求，解析请求，处理请求，产生数据后，再返回给客户端，最后才断开连接，这样一个完整的请求就是这样的了。我们可以看到，</span><span class=\"lake-fontsize-1515\" style=\"color: rgb(245, 34, 45); font-size: 15px;\" data-mce-style=\"font-size: 15px\">一个请求，完全由worker进程来处理，而且只在一个worker进程中处理</span><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">。</span></p><p data-lake-id=\"9ae8e4bca5593e0c7880efb56102c953\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\"><br></span></p><p data-lake-id=\"0c4708f93291e4ae494a5ec2a96cc5e2\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">nginx的进程模型，可以由下图来表示：</span></p><p data-lake-id=\"9b72606cfb5e0ccc8a3fc99dcc987a6e\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/491128/1586615900541-c83dc3e8-1fbb-4b61-bcf4-712d15bc51b9.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/491128/1586615900541-c83dc3e8-1fbb-4b61-bcf4-712d15bc51b9.png\" class=\"image lake-drag-image\" style=\"visibility: visible; width: 602px; height: 377px;\"></span></p><p data-lake-id=\"cb462cf0974755e81624f8be66bb2969\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 data-lake-id=\"f5c7be105ddea42b0065da0de2a5fd08\" id=\"ONkAh\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">惊群现象</h3><p data-lake-id=\"422db35349ec83aa86836dd452df5e47\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">当一个连接进入，会产生惊群现象。</span><br><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">\n一般来说，当一个连接进来后，所有在accept在这个socket上面的进程，都会收到通知，而只有一个进程可以accept这个连接，其它的则accept失败，因此就会产生惊群现象。</span><br>\n<br>\n<strong><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">Nginx对惊群现象的处理</span></strong><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">：\nnginx提供了一个accept_mutex这个东西，这是一个加在accept上的一把共享锁。有了这把锁之后，同一时刻，就只会有一个进程在accpet连接，这样就不会有惊群问题了</span></p><p data-lake-id=\"bb49e748db1b25b86468c1374c750c0e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: rgb(55, 55, 55); font-size: 15px;\" class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\">accept_mutex = on时，多个Worker将以串行方式来处理，其中有一个Worker会被唤醒，其他的Worker继续保持休眠状态；如果accept_mutex=off，那么所有的Worker都会被唤醒，不过只有一个Worker能获取新连接。</span></p><p class=\"\" data-lake-id=\"e11932a5bbc278c61d4854c2a00fcb54\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: rgb(55, 55, 55); font-size: 15px;\" class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\"><br></span></p><p class=\"\" data-lake-id=\"427803dda8af214add8172a8a901f680\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: rgb(55, 55, 55); font-size: 15px;\" class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\">但一般将</span><span class=\"lake-fontsize-1515\" style=\"color: rgb(55, 55, 55); font-size: 15px;\" data-mce-style=\"font-size: 15px\"><span>accept_mutex设置为off就可以。</span></span><span style=\"color: rgb(55, 55, 55); font-size: 15px;\" class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\">如果关闭了它，可能会引起一定程度的惊群问题，表现为上下文切换增多（sar -w）或者负载上升，但是如果你的网站访问量比较大，为了系统的吞吐量，我还是建议大家关闭它。也就是量少时就算惊群也不会有太大性能问题，量大时惊群更有利于性能。</span></p><p class=\"\" data-lake-id=\"5419362dce4324cafe6fe8afb65f016b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">​</span></p><h2 id=\"pSfuQ\" data-lake-id=\"62de4a9367dd40aee7ceb25c167689bd\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">Nginx+FastCGI运行原理</h2><p data-lake-id=\"aae20f7843ede0431a1cabe7a44bbd72\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p class=\"lake-lineheight-2\" data-lake-id=\"b80ca93d42c4af6781bec0bdb1d521b0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-12\" data-mce-style=\"font-size: 12px\" style=\"font-size: 16px;\">以php的fastcgi进程管理器php-fpm为例：</span></p><p class=\"lake-lineheight-2\" data-lake-id=\"adfe87721201d72a41825eb7ce52f03d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 data-lake-id=\"e7b775dc51ebdd5db07410f4df7eb27d\" id=\"iAko8\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">什么是 FastCGI</h3><p data-lake-id=\"25f146fb5365c90a2498b8ed97a3a859\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">FastCGI是一个可伸缩地、高速地在HTTP server和动态脚本语言间通信的接口。多数流行的HTTP server都支持FastCGI，包括Apache、Nginx和lighttpd等。同时，FastCGI也被许多脚本语言支持，其中就有PHP。</span></p><p data-lake-id=\"f52c1b4b9d6b35e014b50b2f90686378\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"fcb504c0339e0b999909fa6eeca00f58\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">FastCGI是从CGI发展改进而来的。传统CGI接口方式的主要缺点是性能很差，因为每次HTTP服务器遇到动态程序时都需要重新启动脚本解析器来执行解析，然后将结果返回给HTTP服务器。这在处理高并发访问时几乎是不可用的。另外传统的CGI接口方式安全性也很差，现在已经很少使用了。</span></p><p data-lake-id=\"39327a58260bc1a5e508f0d176b8787d\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"f1d0953765bdfe70c57cef947b5765d5\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">FastCGI接口方式采用C/S结构，可以将HTTP服务器和脚本解析服务器分开，同时在脚本解析服务器上启动一个或者多个脚本解析守护进程。当HTTP服务器每次遇到动态程序时，可以将其直接交付给FastCGI进程来执行，然后将得到的结果返回给浏览器。这种方式可以让HTTP服务器专一地处理静态请求或者将动态脚本服务器的结果返回给客户端，这在很大程度上提高了整个应用系统的性能。</span></p><p data-lake-id=\"bb771912104723069f29a3f3a7005aec\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 data-lake-id=\"28acc71daf7c3801ef9b2a72146cd68d\" id=\"6EEMD\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">Nginx + FastCGI运行原理</h3><p data-lake-id=\"3fc3efa042c4a96f1b3a66781faac66c\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">Nginx不支持对外部程序的直接调用或者解析，所有的外部程序（包括PHP）必须通过FastCGI接口来调用。FastCGI接口在Linux下是socket（这个socket可以是文件socket，也可以是ip socket）。</span></p><p data-lake-id=\"58d5533623624c1df73dd6dee94d44cc\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"44ec95b40a57fd9b13198cf2b4a6c51b\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">wrapper：为了调用CGI程序，还需要一个FastCGI的wrapper（wrapper可以理解为用于启动另一个程序的程序），这个wrapper绑定在某个固定socket上，如端口或者文件socket。当Nginx将CGI请求发送给这个socket的时候，通过FastCGI接口，wrapper接收到请求，然后Fork(派生）出一个新的线程，这个线程调用解释器或者外部程序处理脚本并读取返回数据；接着，wrapper再将返回的数据通过FastCGI接口，沿着固定的socket传递给Nginx；最后，Nginx将返回的数据（html页面或者图片）发送给客户端。这就是Nginx+FastCGI的整个运作过程，如图所示。</span></p><p data-lake-id=\"9d1506e38eaa7675ee3ac11380afc6a7\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/491128/1586615901580-c7ca9078-85a0-424a-b201-0892d4bdc83b.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/491128/1586615901580-c7ca9078-85a0-424a-b201-0892d4bdc83b.png\" class=\"image lake-drag-image\" style=\"visibility: visible; width: 622px; height: 305px;\"></span></p><p data-lake-id=\"473d6975fe4cbdd7656c5e6b766f5121\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"a1b0e2bc9ac9ebe9fd92e28528de4f84\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">所以，我们首先需要一个wrapper，这个wrapper需要完成的工作：</span></p><p data-lake-id=\"5e113b7d4e8f73256c4f0ffac5a244a9\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"0012356e19c111f9b756831c06b33120\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">通过调用fastcgi（库）的函数通过socket和ningx通信（读写socket是fastcgi内部实现的功能，对wrapper是非透明的）</span></p><p data-lake-id=\"fb1f25fc65f191a21122235ac98a5aef\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"259261de772f1076073f456c05148b86\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">调度thread，进行fork和kill</span></p><p data-lake-id=\"cf5ecfa70ad2648e4788d9a6f4669fb8\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"478735f5cff9e3f33651122bf3f4dc8f\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">和application（php）进行通信</span></p><p data-lake-id=\"f48ce7a356e8780a33e050211b370bfc\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 data-lake-id=\"830a05edb69ba1b044f1e87fa92c599d\" id=\"AHejn\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">PHP-FPM</h3><p data-lake-id=\"d4c9e35513772d4655533aede80662db\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">FastCGI接口方式在脚本解析服务器上启动一个或者多个守护进程对动态脚本进行解析，这些进程就是FastCGI进程管理器，或者称为FastCGI引擎。 spawn-fcgi与PHP-FPM就是支持PHP的两个FastCGI进程管理器。因此HTTPServer完全解放出来，可以更好地进行响应和并发处理。</span></p><p data-lake-id=\"a836b3131c006d4090d9d3907b4e5cf4\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"93e58796561fbf978c71b0cc56d242c4\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">Nginx是个轻量级的HTTP server，必须借助第三方的FastCGI处理器才可以对PHP进行解析，因此其实这样看来nginx是非常灵活的，它可以和任何第三方提供解析的处理器实现连接从而实现对PHP的解析(在nginx.conf中很容易设置)。现在主要用PHP的FastCGI处理器PHP-FPM，它有如下优点：</span></p><p data-lake-id=\"7faeef77a305bed94e9a3e97a6b0f4af\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"d04527492419985e50c93eef09f5b4fa\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">由于它是作为PHP的patch补丁来开发的，安装的时候需要和php源码一起编译，也就是说编译到php core中了，因此在性能方面要优秀一些；</span></p><p data-lake-id=\"6edc8ca9135aab1e38b9db33cc71f972\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"95d60b6dd7b716e22c27775929d734a2\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">同时它在处理高并发方面也优于spawn-fcgi，至少不会自动重启fastcgi处理器。因此，推荐使用Nginx+PHP/PHP-FPM这个组合对PHP进行解析。</span></p><p data-lake-id=\"77265ff37a35dd7172dd998099f45a2b\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"9a32f7d7ca8c39e5d011a67035abac7f\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">相对Spawn-FCGI，PHP-FPM在CPU和内存方面的控制都更胜一筹，而且前者很容易崩溃，必须用crontab进行监控，而PHP-FPM则没有这种烦恼。 FastCGI 的主要优点是把动态语言和HTTP Server分离开来，所以Nginx与PHP/PHP-FPM经常被部署在不同的服务器上，以分担前端Nginx服务器的压力，使Nginx专一处理静态请求和转发动态请求，而PHP/PHP-FPM服务器专一解析PHP动态请求。</span></p><p data-lake-id=\"95015236902205ede2887744a84339c2\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 data-lake-id=\"806cda3f37f029b10a1de8afe7ab8132\" id=\"hp14n\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">Nginx + PHP-FPM</h3><p data-lake-id=\"5a8ce8845829ee2976919a1dd5e3e458\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">PHP-FPM是管理FastCGI的一个管理器，它作为PHP的插件存在，在安装PHP要想使用PHP-FPM时在老php的老版本（php5.3.3之前）就需要把PHP-FPM以补丁的形式安装到PHP中，而且PHP要与PHP-FPM版本一致，这是必须的）</span></p><p data-lake-id=\"4899ba8289cea8c4863c66044bd53d2a\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"dd285ad38c1f8773cf9c77f4d01bd9a3\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">PHP-FPM其实是PHP源代码的一个补丁，旨在将FastCGI进程管理整合进PHP包中。必须将它patch到你的PHP源代码中，在编译安装PHP后才可以使用。 　 PHP5.3.3已经集成php-fpm了，不再是第三方的包了。PHP-FPM提供了更好的PHP进程管理方式，可以有效控制内存和进程、可以平滑重载PHP配置，比spawn-fcgi具有更多优点，所以被PHP官方收录了。在./configure的时候带 –enable-fpm参数即可开启PHP-FPM。</span></p><p data-lake-id=\"2b6f1162df144aee995f387caf04e885\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"d98fad7108650979e9a2704c3f817a90\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">fastcgi已经在php5.3.5的core中了，不必在configure时添加 --enable-fastcgi了。老版本如php5.2的需要加此项。</span></p><p data-lake-id=\"2eaa4db5341917c5ac793ac4fc4009d3\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"b13be454865379ca94ffcaed5c92322d\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">当我们安装Nginx和PHP-FPM完后，配置信息：</span></p><p data-lake-id=\"8995ac3aabfeb62d8be65da802aa1a9f\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"9cf9ba130f5bba6838e76aa8b1e01602\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">PHP-FPM的默认配置php-fpm.conf：</span></p><p data-lake-id=\"9f230fd7e91b8358eb213f66f17f6e89\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"b665b1af\" data-language=\"nginx\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"># 表示php的fastcgi进程监听的ip地址以及端口，可以监听unix socket，性能更好。</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-string-2\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">listen</span> = 127.0.0.1:<span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">9000 </span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"># listen = /tmp/php-cgi.sock</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-string-2\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">listen</span>.<span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">backlog </span>= <span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">-1</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-string-2\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">listen</span>.<span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">allowed_clients </span>= 127.0.0.<span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">1</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-string-2\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">listen</span>.<span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">owner </span>= <span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">www</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-string-2\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">listen</span>.<span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">group </span>= <span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">www</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-string-2\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">listen</span>.<span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">mode </span>= <span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">0666</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">user</span> = <span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">www</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">group </span>= <span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">www</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">pm </span>= <span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">dynamic</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">pm.<span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">max_children </span>= <span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">4</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">pm.<span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">start_servers </span>= <span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">2</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">pm.<span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">min_spare_servers </span>= <span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">2</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">pm.<span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">max_spare_servers </span>= <span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">4</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">pm.<span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">max_requests </span>= <span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">1024</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">pm.<span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">process_idle_timeout </span>= <span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">10s</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">request_terminate_timeout </span>= <span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">100</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">request_slowlog_timeout </span>= <span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">1</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">slowlog </span>= /alidata/log/<span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">php-slow</span>.<span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">log</span></span></span></pre></div></div></div><p data-lake-id=\"e53e9df914c0de368ec4706df26239e3\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"afb2001b50728598a4883afd5030859f\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">Nginx配置运行php： 编辑nginx.conf加入如下语句：</p><p data-lake-id=\"e40bb97543846560b4bae20af2c3ed53\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" id=\"2bd8b870\" data-language=\"nginx\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"cm-variable-2\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">location</span> <span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">~</span> [<span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">^</span>/]<span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\\</span>.<span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">php(</span>/<span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">|</span><span class=\"cm-tag\" style=\"color: rgb(34, 134, 58); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">$)</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">{\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-string-2\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">try_files</span> <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">$uri </span>=404;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"># 指定了fastcgi进程侦听的端口,nginx就是通过这里与php交互的</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-string-2\" style=\"color: rgb(102, 153, 0); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">fastcgi_pass</span> 127.0.0.1:9000;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-comment\" style=\"color: rgb(106, 115, 125); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"># fastcgi_pass  unix:/tmp/php-cgi.sock;</span>\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">    <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">fastcgi_index</span> <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">index</span>.php;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  <span class=\"cm-keyword\" style=\"color: rgb(215, 58, 73); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">fastcgi_param</span>  <span class=\"cm-number\" style=\"color: rgb(0, 92, 197); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">SCRIPT_FILENAME </span>   $document_root$fastcgi_script_name;\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">}</span></span></pre></div></div></div><p data-lake-id=\"7e95f95d2372881096eafc534225cfae\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"0a37146cac691b88c5bad02c65402c9a\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">Nginx通过location指令，将所有以php为后缀的文件都交给127.0.0.1:9000来处理，而这里的IP地址和端口就是FastCGI进程监听的IP地址和端口。</p><p class=\"lake-lineheight-2\" data-lake-id=\"88b28032535fb198f37a9bacabef280d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 data-lake-id=\"be902b092e5f09ddcb59e4b7ba2e8bf5\" id=\"00zZG\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">其整体工作流程：</h3><p data-lake-id=\"b25a0643de1e88c1f85bee1aa3182cf3\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p class=\"lake-lineheight-2\" data-lake-id=\"5c900e6b2285119b99f5dbd2b740ddb2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">1)、FastCGI进程管理器php-fpm自身初始化，启动主进程php-fpm和启动start_servers个CGI 子进程。</span></p><p data-lake-id=\"538df5d8e9614c5a2fb416638188d9f2\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">&nbsp; &nbsp; 主进程php-fpm主要是管理fastcgi子进程，监听9000端口。fastcgi子进程等待来自Web Server的连&nbsp; &nbsp; &nbsp; &nbsp; 接。</span></p><p class=\"lake-lineheight-2\" data-lake-id=\"5bb69855de6b3dd0cf959041998191bd\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\"><br></span></p><p data-lake-id=\"683cde8dc825cc312bd6f4c51d572966\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">2)、当客户端请求到达Web Server Nginx是时，Nginx通过location指令，将所有以php为后缀的文件都交&nbsp; &nbsp; &nbsp; &nbsp;给127.0.0.1:9000来处理，即Nginx通过location指令，将所有以php为后缀的文件都交给&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;127.0.0.1:9000来处理。</span></p><p class=\"lake-lineheight-2\" data-lake-id=\"f52e8b4695e7096b0f34c9ea86c10429\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\"><br></span></p><p data-lake-id=\"9c4588e71a901875757c934c1187beea\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">3）FastCGI进程管理器PHP-FPM选择并连接到一个子进程CGI解释器。Web server将CGI环境变量和标准&nbsp; &nbsp; &nbsp; &nbsp;输入发送到FastCGI子进程。</span></p><p class=\"lake-lineheight-2\" data-lake-id=\"435869a36621708dcfb80c01420dc3f7\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\"><br></span></p><p data-lake-id=\"ba069ebc69688b92baf1c0496f43784f\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">4)、FastCGI子进程完成处理后将标准输出和错误信息从同一连接返回Web Server。当FastCGI子进程关闭&nbsp; &nbsp; &nbsp; &nbsp;连接时，请求便告处理完成。</span></p><p class=\"lake-lineheight-2\" data-lake-id=\"ce00e9a895675484500ad51acbebdec5\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\"><br></span></p><p data-lake-id=\"c3659b1daab50128b8500866f24da562\" class=\"lake-lineheight-2\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 2; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span class=\"lake-fontsize-1515\" data-mce-style=\"font-size: 15px\" style=\"font-size: 15px;\">5)、FastCGI子进程接着等待并处理来自FastCGI进程管理器（运行在 WebServer中）的下一个连接。</span></p></div>",
  "slug": 6390488,
  "title": "nginx 工作原理、进程模型"
}