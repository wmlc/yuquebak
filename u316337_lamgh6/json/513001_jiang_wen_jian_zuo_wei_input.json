{
  "body_html": "\n\n  \n    将文件作为input输入\n    \n    \n    \n    \n    \n  <link href=\"https://www.yuque.com/attachments/yuque/0/2020/css/491128/1588213910235-976bcd3a-7a9c-473d-b800-1b1df54807d4.css\" rel=\"stylesheet\" type=\"text/css\" />\n<link href=\"https://www.yuque.com/attachments/yuque/0/2020/css/491128/1588213910286-64db0dd0-ac29-46fb-9241-76ef318b1b53.css\" rel=\"stylesheet\" type=\"text/css\" />\n\n  \n        \n<div class=\"page\">\n    \n        <h1 class=\"book-chapter\" id=\"calibre_toc_13\">将文件作为input输入</h1>\n        <div class=\"section\">\n            <h1 id=\"51、将文件作为input输入\" class=\"calibre7\">5.1、将文件作为input输入</h1>\n<p class=\"calibre12\">Logstash使用一个名叫FileWatch的Ruby Gem库来监听文件的变化，这个库支持Glob展开文件路径，而且会记录一个叫.sincedbd 数据库文件来跟踪监听的日志文件的当前读取位置。\nsincedb文件中记录了每个被监听的文件的inode,major number,minor number和pos。</p>\n<h2 id=\"配置示例\" class=\"calibre13\">配置示例</h2>\n<pre class=\"calibre10\"><code class=\"pcalibre4 pcalibre3 calibre11\">input {\n    file {\n        path =&gt; [\"/var/log/*.log\", \"/var/log/message\"]\n        type =&gt; \"system\"\n        start_position =&gt; \"beginning\"\n    }\n}\n</code></pre><h2 id=\"解释：\" class=\"calibre13\">解释：</h2>\n<p class=\"calibre12\">FileWatch库中支持一下配置项：</p>\n<table class=\"calibre22\">\n<thead class=\"calibre23\">\n<tr class=\"calibre24\">\n<th class=\"calibre25\">参数</th>\n<th class=\"calibre25\">类型</th>\n<th class=\"calibre25\">是否必选</th>\n<th class=\"calibre25\">默认值</th>\n<th class=\"calibre25\">描述</th>\n</tr>\n</thead>\n<tbody class=\"calibre26\">\n<tr class=\"calibre24\">\n<td class=\"calibre27\">add_field</td>\n<td class=\"calibre27\">hash</td>\n<td class=\"calibre27\">No</td>\n<td class=\"calibre27\">{}</td>\n<td class=\"calibre27\">在事件中加入一个field</td>\n</tr>\n<tr class=\"calibre28\">\n<td class=\"calibre27\">close_older</td>\n<td class=\"calibre27\">number</td>\n<td class=\"calibre27\">No</td>\n<td class=\"calibre27\">3600</td>\n<td class=\"calibre27\">一个已经监听中的文件，如果超过这个值的时间内没有更新内容，就关闭监听它的文件句柄。<strong class=\"calibre16\">默认是3600秒</strong>，即一个小时。【时间点短】</td>\n</tr>\n<tr class=\"calibre24\">\n<td class=\"calibre27\">codec</td>\n<td class=\"calibre27\">codec</td>\n<td class=\"calibre27\">No</td>\n<td class=\"calibre27\">\"plain\"</td>\n<td class=\"calibre27\">codec用于输入的数据，在数据进入到ipnput之前，可以使用input codecs对数据进行解码，从而省去了使用单独的filter来完成这项工作</td>\n</tr>\n<tr class=\"calibre28\">\n<td class=\"calibre27\">delimiter</td>\n<td class=\"calibre27\">string</td>\n<td class=\"calibre27\">No</td>\n<td class=\"calibre27\">\"\\n\"</td>\n<td class=\"calibre27\">设置行与行之间的分隔符，默认使用”\\n“</td>\n</tr>\n<tr class=\"calibre24\">\n<td class=\"calibre27\">discover_interval</td>\n<td class=\"calibre27\">number</td>\n<td class=\"calibre27\">No</td>\n<td class=\"calibre27\">15</td>\n<td class=\"calibre27\">设置logstash每隔多久去检查一次被监听的path下是否有新文件。<strong class=\"calibre16\">默认值是15秒</strong></td>\n</tr>\n<tr class=\"calibre28\">\n<td class=\"calibre27\">exclude</td>\n<td class=\"calibre27\">array</td>\n<td class=\"calibre27\">No</td>\n<td class=\"calibre27\">\n</td><td class=\"calibre27\">不想被监听的文件可以排除出去，这里跟path 一样支持glob展开</td>\n</tr>\n<tr class=\"calibre24\">\n<td class=\"calibre27\">ignore_older</td>\n<td class=\"calibre27\">number</td>\n<td class=\"calibre27\">No</td>\n<td class=\"calibre27\">86400</td>\n<td class=\"calibre27\">在每次检查文件列表的时候，如果一个文件的最后修改时间超过这个值，就忽略这个文件。默认是86400秒，即一天</td>\n</tr>\n<tr class=\"calibre28\">\n<td class=\"calibre27\">max_open_files</td>\n<td class=\"calibre27\">number</td>\n<td class=\"calibre27\">No</td>\n<td class=\"calibre27\">\n</td><td class=\"calibre27\">配置当前input可以监控的文件（句柄）的最大值。当我们需要处理的文件大于这个参数的值时，使用close_older参数将一些文件关闭</td>\n</tr>\n<tr class=\"calibre24\">\n<td class=\"calibre27\">path</td>\n<td class=\"calibre27\">array</td>\n<td class=\"calibre27\">Yes</td>\n<td class=\"calibre27\">\n</td><td class=\"calibre27\">用来设置要监控的input目标文件的文件路径，可以使用通配符的方式描述文件路径，如/var/log/<em class=\"calibre29\">.log。如果设置的值为/var/log/**/</em>.log, 会在/var/log路径下，递归的寻找后缀为log的目标文件</td>\n</tr>\n<tr class=\"calibre28\">\n<td class=\"calibre27\">sincedb_path</td>\n<td class=\"calibre27\">string</td>\n<td class=\"calibre27\">No</td>\n<td class=\"calibre27\">\n</td><td class=\"calibre27\">如果你不想用默认的$HOME/.sincedb（windows平台上在C:\\Windows\\System32\\Config\\systemprpfile.sincedb），可以通过这个配置定义sincedb文件到其他位置</td>\n</tr>\n<tr class=\"calibre24\">\n<td class=\"calibre27\">sincedb_write_interval</td>\n<td class=\"calibre27\">number</td>\n<td class=\"calibre27\">No</td>\n<td class=\"calibre27\">15</td>\n<td class=\"calibre27\">logstash 每隔多久写一次sincedb文件，默认是15秒</td>\n</tr>\n<tr class=\"calibre28\">\n<td class=\"calibre27\">start_position</td>\n<td class=\"calibre27\">string, \"beginning\"或“end”</td>\n<td class=\"calibre27\">No</td>\n<td class=\"calibre27\">“end“</td>\n<td class=\"calibre27\">logstash 从什么位置开始去读文件数据，默认是结束位置，也就是说logstash进程会以类似tail  -F 的形式运行。如果你是要导入原始数据，把这个设置改为“beginning”，Logstash进程就从头开始读取，有点类似cat，但是读到最后一行不会终止，而是继续变成 tail -F。</td>\n</tr>\n<tr class=\"calibre24\">\n<td class=\"calibre27\">stat_interval</td>\n<td class=\"calibre27\">number</td>\n<td class=\"calibre27\">No</td>\n<td class=\"calibre27\">1</td>\n<td class=\"calibre27\">logstash每隔多久检查一次被监听文件的状态（是否有更新），默认是1秒</td>\n</tr>\n<tr class=\"calibre28\">\n<td class=\"calibre27\">tags</td>\n<td class=\"calibre27\">array</td>\n<td class=\"calibre27\">No</td>\n<td class=\"calibre27\">\n</td><td class=\"calibre27\">添加一个任意的数字作为当前事件的标签，这个标签对我们后续的工作会有帮助</td>\n</tr>\n<tr class=\"calibre24\">\n<td class=\"calibre27\">type</td>\n<td class=\"calibre27\">string</td>\n<td class=\"calibre27\">No</td>\n<td class=\"calibre27\">\n</td><td class=\"calibre27\">input的所有事件都需要添加一个type属性，types属性主要在filter场景中使用。type会作为事件的一部分进行存储，因此后续也可以用type作为关键字在kibana中搜索</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"注意end\" class=\"calibre13\">注意end</h2>\n<p class=\"calibre12\"><em class=\"calibre29\">因为windows平台上没有inode的概念，Logstash某些版本在windows平台上监听文件不是很靠谱。windows平台上，推荐考虑使用nxlog作为收集端。</em></p>\n\n        </div>\n    \n</div>\n\n        \n    \n\n\n\n",
  "slug": 6588814,
  "title": "513001_jiang_wen_jian_zuo_wei_input"
}