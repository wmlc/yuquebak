{
  "body_html": "\n\n  \n    第四节 Logstash 配置\n    \n    \n    \n    \n    \n  <link href=\"https://www.yuque.com/attachments/yuque/0/2020/css/491128/1588213910235-976bcd3a-7a9c-473d-b800-1b1df54807d4.css\" rel=\"stylesheet\" type=\"text/css\" />\n<link href=\"https://www.yuque.com/attachments/yuque/0/2020/css/491128/1588213910286-64db0dd0-ac29-46fb-9241-76ef318b1b53.css\" rel=\"stylesheet\" type=\"text/css\" />\n\n  \n        \n<div class=\"page\">\n    \n        <h1 class=\"book-chapter\" id=\"calibre_toc_10\">第四节 Logstash 配置</h1>\n        <div class=\"section\">\n            <h1 id=\"第四节-logstash-基本配置\" class=\"calibre7\">第四节 Logstash 基本配置</h1>\n<h2 id=\"1、logstash扮演的角色\" class=\"calibre8\">1、Logstash扮演的角色</h2>\n<p class=\"calibre12\"><img src=\"https://cdn.nlark.com/yuque/0/2020/jpg/491128/1588213925606-5d9bc5ee-ba1e-40a9-be3f-4e598d39d3c2.jpg\" class=\"calibre14\" /></p>\n<ul class=\"calibre17\">\n<li class=\"calibre18\">Shipper: 承运商，托运人，发货人;</li>\n<li class=\"calibre18\">Broker: 经纪人; 中间人，代理人; </li>\n<li class=\"calibre18\">Indexer: 分度器，编索引的人;</li>\n</ul>\n<h2 id=\"2、基本配置语法\" class=\"calibre13\">2、基本配置语法</h2>\n<p class=\"calibre12\">Logstash 设计了自己的DSL（domain specific language）</p>\n<h3 id=\"21、区段（section）\" class=\"calibre9\">2.1、区段（section）</h3>\n<p class=\"calibre12\">Logstash用{}来定义区域。区域内可以包括插件区域定义，你可以在一个区域内定义多个插件。插件区域则可以定义键值对设置。示例如下：</p>\n<pre class=\"calibre10\"><code class=\"pcalibre4 pcalibre3 calibre11\">input\n{\n  stdin{}\n  syslog{}\n}\n</code></pre><h3 id=\"22、数据类型\" class=\"calibre9\">2.2、数据类型</h3>\n<p class=\"calibre12\">Logstash 支持少量的数据值类型：</p>\n<ul class=\"calibre17\">\n<li class=\"calibre18\"><p class=\"calibre12\">bool</p>\n<pre class=\"calibre10\"><code class=\"pcalibre4 pcalibre3 calibre11\">debug =&gt; true\n</code></pre></li>\n<li class=\"calibre18\"><p class=\"calibre12\">string</p>\n<pre class=\"calibre10\"><code class=\"pcalibre4 pcalibre3 calibre11\">host =&gt; \"hostname\"\n</code></pre></li>\n<li class=\"calibre18\"><p class=\"calibre12\">nubmer</p>\n<pre class=\"calibre10\"><code class=\"pcalibre4 pcalibre3 calibre11\">port =&gt; 514\n</code></pre></li>\n<li class=\"calibre18\"><p class=\"calibre12\">array</p>\n<pre class=\"calibre10\"><code class=\"pcalibre4 pcalibre3 calibre11\">match =&gt;[\"datetime\", \"UNIX\", \"ISO8601\"]\n</code></pre></li>\n<li class=\"calibre18\"><p class=\"calibre12\">hash</p>\n<pre class=\"calibre10\"><code class=\"pcalibre4 pcalibre3 calibre11\">options =&gt;\n{\n  key1 =&gt; \"value1\",\n  key2 =&gt; \"value2\"\n}\n</code></pre></li>\n</ul>\n<h3 id=\"23、字段引用field-reference\" class=\"calibre9\">2.3、字段引用(field reference)</h3>\n<h3 id=\"24、条件判断condition\" class=\"calibre9\">2.4、条件判断(condition)</h3>\n<p class=\"calibre12\">表达式支持下面这些操作符：</p>\n<ul class=\"calibre17\">\n<li class=\"calibre18\">==(等于), !=(不等于), &lt;(小于), &gt;(大于), &lt;=(小于等于), &gt;=(大于等于)</li>\n<li class=\"calibre18\">=~(匹配正则), !~（不匹配正则）</li>\n<li class=\"calibre18\">in(包含), not in(不包含)</li>\n<li class=\"calibre18\">and(与), or(或), nand(非与), xor(非或)</li>\n<li class=\"calibre18\">()(复合表达式), !()(对复合表达式结果取反)</li>\n</ul>\n<p class=\"calibre12\">通常来说，你都会在表达式里用到字段引用。为了尽量展示全面各种表达式，下面虚拟一个示例：</p>\n<pre class=\"calibre10\"><code class=\"pcalibre4 pcalibre3 calibre11\">if \"_grokparsefailure\" not in [tags] \n{\n\n} \nelse if [status] !~ /^2\\d\\d/ or ( [url] == \"/noc.gif\" nand [geoip][city] != \"beijing\" ) \n{\n\n} \nelse \n{\n\n}\n</code></pre><h3 id=\"25、命令行参数\" class=\"calibre9\">2.5、命令行参数</h3>\n<ul class=\"calibre17\">\n<li class=\"calibre18\"><p class=\"calibre12\">-e<br class=\"calibre21\" />执行logstash程序</p>\n</li>\n<li class=\"calibre18\"><p class=\"calibre12\">--config 或 -f<br class=\"calibre21\" />引入配置文件，默认配置文件的路径为/etc/logstash/conf.d。如果直接使用“-f /etc/logstash/conf.d/“，会将该目录中所有配置文件，按照文件名的字母顺序进行加载。</p>\n</li>\n<li class=\"calibre18\"><p class=\"calibre12\">--configtest 或 -t</p>\n</li>\n</ul>\n<p class=\"calibre12\">用来测试Logstash读取到的配置文件语法是否能正常解析。Logstash配置语法是用grammar.treetop定义的。尤其是使用了上一条提到的读取目录方式的读者，尤其要提前测试。</p>\n<ul class=\"calibre17\">\n<li class=\"calibre18\">--log 或 -l</li>\n</ul>\n<p class=\"calibre12\">Logstash默认输出日志到标准错误。生成环境下你可以通过bin/logstash -l logs/logstash.log 命令统一存储日志</p>\n<ul class=\"calibre17\">\n<li class=\"calibre18\">--pipeline-workers 或 -w</li>\n</ul>\n<p class=\"calibre12\">运行filter和output的pipeline线程数量。默认是cpu的核数。</p>\n<ul class=\"calibre17\">\n<li class=\"calibre18\">--pipeline-batch-size 或 -b</li>\n</ul>\n<p class=\"calibre12\">每个Logstash Pipeline线程，在执行具体的filter和output函数之前，做多能积累的日志条数。默认是125条。这个值越大Logstash的性能会越好，同样也会消耗越多的JVM内存。</p>\n<ul class=\"calibre17\">\n<li class=\"calibre18\">--pipeline-batch-delay 或 -u</li>\n</ul>\n<p class=\"calibre12\">每个Logstash pipeline线程，在打包批量日志的时候，最多等待几毫秒。默认是5ms</p>\n<ul class=\"calibre17\">\n<li class=\"calibre18\">--pluginpath 或 -P</li>\n</ul>\n<p class=\"calibre12\">可以写自己的插件，然后用该参数加载它们。</p>\n<ul class=\"calibre17\">\n<li class=\"calibre18\">--verbose</li>\n</ul>\n<p class=\"calibre12\">输出一定的调试日志</p>\n<ul class=\"calibre17\">\n<li class=\"calibre18\">--debug</li>\n</ul>\n<p class=\"calibre12\">输出更多的调试日志</p>\n<h2 id=\"3、实现长期运行\" class=\"calibre13\">3、实现长期运行</h2>\n\n        </div>\n    \n</div>\n\n        \n    \n\n\n\n",
  "slug": 6588877,
  "title": "di_si_jie_logstash_pei_zhi"
}