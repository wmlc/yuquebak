{
  "body_html": "<!doctype html><div data-lake-element=\"root\" class=\"lake-engine lake-typography-traditional\" data-parser-by=\"lake2html\"><a name=\"从头到尾彻底理解傅里叶变换算法、上\"></a><h2 id=\"f8751751\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 24px; line-height: 32px;\">从头到尾彻底理解傅里叶变换算法、上</h2><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">I、本文中阐述离散傅里叶变换方法，是根据此书：The Scientist and Engineer's Guide to Digital Signal Processing，By Steven W. Smith, Ph.D.而翻译而成的，此书地址：<a href=\"http://www.dspguide.com/pdfbook.htm\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.dspguide.com/pdfbook.htm</a>。<br>\nII、同时，有相当一部分内容编辑整理自dznlong的博客，也贴出其博客地址，向原创的作者表示致敬：<a href=\"http://blog.csdn.net/dznlong\" target=\"_blank\" rel=\"noopener noreferrer\">http://blog.csdn.net/dznlong</a> 。这年头，真正静下心写来原创文章的人，很少了。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">从头到尾彻底理解傅里叶变换算法、上<br>\n前言<br>\n第一章、傅立叶变换的由来<br>\n第二章、实数形式离散傅立叶变换（Real DFT）</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">从头到尾彻底理解傅里叶变换算法、下<br>\n第三章、复数<br>\n第四章、复数形式离散傅立叶变换</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><a name=\"前言：\"></a><h3 id=\"141f3596\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">前言：</h3><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">“关于傅立叶变换，无论是书本还是在网上可以很容易找到关于傅立叶变换的描述，但是大都是些故弄玄虚的文章，太过抽象，尽是一些让人看了就望而生畏的公式的罗列，让人很难能够从感性上得到理解”---dznlong</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">那么，到底什么是傅里叶变换算法列?傅里叶变换所涉及到的公式具体有多复杂列?<br>\n<strong>傅里叶变换</strong>（Fourier transform）是一种线性的积分变换。因其基本思想首先由法国学者傅里叶系统地提出，所以以其名字来命名以示纪念。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">哦，傅里叶变换原来就是一种变换而已，只是这种变换是从时间转换为频率的变化。这下，你就知道了，傅里叶就是一种变换，一种什么变换？就是一种从时间到频率的变化或其相互转化。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">ok，咱们再来总体了解下傅里叶变换，让各位对其有个总体大概的印象，也顺便看看傅里叶变换所涉及到的公式，究竟有多复杂，<br>\n以下就是傅里叶变换的4种变体（摘自，维基百科）:</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><strong>连续傅里叶变换</strong></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">一般情况下，若“傅里叶变换”一词不加任何限定语，则指的是“连续傅里叶变换”。连续傅里叶变换将平方可积的函数f(t)表示成复指数函数的积分或级数形式。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22..%2Fimages%2F10-2-1%2F1.jpg%22%2C%22alt%22%3A%22%22%7D\"><img data-role=\"image\" src=\"../images/10-2-1/1.jpg\" data-raw-src=\"../images/10-2-1/1.jpg\" class=\"image lake-drag-image\" style=\"border: none; box-shadow: none; visibility: visible;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">这是将频率域的函数F(ω)表示为时间域的函数f(t)的积分形式。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">连续傅里叶变换的逆变换 (inverse Fourier transform)为：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22..%2Fimages%2F10-2-1%2F2.jpg%22%2C%22alt%22%3A%22%22%7D\"><img data-role=\"image\" src=\"../images/10-2-1/2.jpg\" data-raw-src=\"../images/10-2-1/2.jpg\" class=\"image lake-drag-image\" style=\"border: none; box-shadow: none; visibility: visible;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">即将时间域的函数f(t)表示为频率域的函数F(ω)的积分。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">一般可称函数<strong>f(t)</strong>为原函数，而称函数<strong>F(ω)</strong>为傅里叶变换的像函数，原函数和像函数构成一个傅里叶变换对（transform pair）。<br>\n\u0001<br>\n除此之外，还有其它型式的变换对，以下两种型式亦常被使用。在通信或是信号处理方面，常以<span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22..%2Fimages%2F10-2-1%2F3.jpg%22%2C%22alt%22%3A%22%22%7D\"><img data-role=\"image\" src=\"../images/10-2-1/3.jpg\" data-raw-src=\"../images/10-2-1/3.jpg\" class=\"image lake-drag-image\" style=\"border: none; box-shadow: none; visibility: visible;\"></span>来代换，而形成新的变换对:</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22..%2Fimages%2F10-2-1%2F4.jpg%22%2C%22alt%22%3A%22%22%7D\"><img data-role=\"image\" src=\"../images/10-2-1/4.jpg\" data-raw-src=\"../images/10-2-1/4.jpg\" class=\"image lake-drag-image\" style=\"border: none; box-shadow: none; visibility: visible;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">或者是因系数重分配而得到新的变换对：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22..%2Fimages%2F10-2-1%2F5.jpg%22%2C%22alt%22%3A%22%22%7D\"><img data-role=\"image\" src=\"../images/10-2-1/5.jpg\" data-raw-src=\"../images/10-2-1/5.jpg\" class=\"image lake-drag-image\" style=\"border: none; box-shadow: none; visibility: visible;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">一种对连续傅里叶变换的推广称为分数傅里叶变换（Fractional Fourier Transform）。分数傅里叶变换(fractional Fourier transform,FRFT)指的就是傅里叶变换(Fourier transform, FT)的广义化。<br>\n分数傅里叶变换的物理意义即做傅里叶变换 a 次，其中 a 不一定要为整数；而做了分数傅里叶变换之后，信号或输入函数便会出现在介于时域(time domain)与频域(frequency domain)之间的分数域(fractional domain)。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">当f(t)为偶函数（或奇函数）时，其正弦（或余弦）分量将消亡，而可以称这时的变换为余弦变换（cosine transform）或正弦变换（sine transform）.</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">另一个值得注意的性质是，当f(t)为纯实函数时，F(−ω) = F*(ω)成立.</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><strong>傅里叶级数</strong></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">连续形式的傅里叶变换其实是傅里叶级数 (Fourier series)的推广，因为积分其实是一种极限形式的求和算子而已。对于周期函数，其傅里叶级数是存在的：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22..%2Fimages%2F10-2-1%2F6.jpg%22%2C%22alt%22%3A%22%22%7D\"><img data-role=\"image\" src=\"../images/10-2-1/6.jpg\" data-raw-src=\"../images/10-2-1/6.jpg\" class=\"image lake-drag-image\" style=\"border: none; box-shadow: none; visibility: visible;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">其中Fn为复幅度。对于实值函数，函数的傅里叶级数可以写成：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22..%2Fimages%2F10-2-1%2F7.jpg%22%2C%22alt%22%3A%22%22%7D\"><img data-role=\"image\" src=\"../images/10-2-1/7.jpg\" data-raw-src=\"../images/10-2-1/7.jpg\" class=\"image lake-drag-image\" style=\"border: none; box-shadow: none; visibility: visible;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">其中an和bn是实频率分量的幅度。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><strong>离散时域傅里叶变换</strong></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">离散傅里叶变换是离散时间傅里叶变换（DTFT）的特例（有时作为后者的近似）。DTFT在时域上离散，在频域上则是周期的。DTFT可以被看作是傅里叶级数的逆变换。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><strong>离散傅里叶变换</strong></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">离散傅里叶变换（DFT），是连续傅里叶变换在时域和频域上都离散的形式，将时域信号的采样变换为在离散时间傅里叶变换（DTFT）频域的采样。在形式上，变换两端（时域和频域上）的序列是有限长的，而实际上这两组序列都应当被认为是离散周期信号的主值序列。即使对有限长的离散信号作DFT，也应当将其看作经过周期延拓成为周期信号再作变换。在实际应用中通常采用快速傅里叶变换以高效计算DFT。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">为了在科学计算和数字信号处理等领域使用计算机进行傅里叶变换，必须将函数xn定义在离散点而非连续域内，且须满足有限性或周期性条件。这种情况下，使用<em>离散傅里叶变换（DFT）</em>，将函数xn表示为下面的求和形式：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22..%2Fimages%2F10-2-1%2F8.jpg%22%2C%22alt%22%3A%22%22%7D\"><img data-role=\"image\" src=\"../images/10-2-1/8.jpg\" data-raw-src=\"../images/10-2-1/8.jpg\" class=\"image lake-drag-image\" style=\"border: none; box-shadow: none; visibility: visible;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">其中Xk是傅里叶幅度。直接使用这个公式计算的计算复杂度为O（n*n），而<em>快速傅里叶变换（FFT）可以将复杂度改进为O（n*lgn）</em>。（后面会具体阐述FFT是如何将复杂度降为O（n*lgn）的。）计算复杂度的降低以及数字电路计算能力的发展使得DFT成为在信号处理领域十分实用且重要的方法。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">下面，比较下上述傅立叶变换的4种变体，</p><div data-card-type=\"block\" data-lake-card=\"table\" data-card-value=\"data:%7B%22id%22%3A%22cfc691eb%22%2C%22rows%22%3A5%2C%22cols%22%3A0%2C%22html%22%3A%22%3Ctable%20class%3D%5C%22lake-table%5C%22%20style%3D%5C%22%5C%22%3E%3Ccolgroup%3E%3C%2Fcolgroup%3E%3Ctr%3E%3Ctd%3E%E5%8F%98%E6%8D%A2%3C%2Ftd%3E%3Ctd%3E%E6%97%B6%E9%97%B4%3C%2Ftd%3E%3Ctd%3E%E9%A2%91%E7%8E%87%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%3E%3Ctd%3E%E8%BF%9E%E7%BB%AD%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2%3C%2Ftd%3E%3Ctd%3E%E8%BF%9E%E7%BB%AD%EF%BC%8C%E9%9D%9E%E5%91%A8%E6%9C%9F%E6%80%A7%3C%2Ftd%3E%3Ctd%3E%E8%BF%9E%E7%BB%AD%EF%BC%8C%E9%9D%9E%E5%91%A8%E6%9C%9F%E6%80%A7%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%3E%3Ctd%3E%E5%82%85%E9%87%8C%E5%8F%B6%E7%BA%A7%E6%95%B0%3C%2Ftd%3E%3Ctd%3E%E8%BF%9E%E7%BB%AD%EF%BC%8C%E5%91%A8%E6%9C%9F%E6%80%A7%3C%2Ftd%3E%3Ctd%3E%E7%A6%BB%E6%95%A3%EF%BC%8C%E9%9D%9E%E5%91%A8%E6%9C%9F%E6%80%A7%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%3E%3Ctd%3E%E7%A6%BB%E6%95%A3%E6%97%B6%E9%97%B4%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2%3C%2Ftd%3E%3Ctd%3E%E7%A6%BB%E6%95%A3%EF%BC%8C%E9%9D%9E%E5%91%A8%E6%9C%9F%E6%80%A7%3C%2Ftd%3E%3Ctd%3E%E8%BF%9E%E7%BB%AD%EF%BC%8C%E5%91%A8%E6%9C%9F%E6%80%A7%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%3E%3Ctd%3E%E7%A6%BB%E6%95%A3%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2%3C%2Ftd%3E%3Ctd%3E%E7%A6%BB%E6%95%A3%EF%BC%8C%E5%91%A8%E6%9C%9F%E6%80%A7%3C%2Ftd%3E%3Ctd%3E%E7%A6%BB%E6%95%A3%EF%BC%8C%E5%91%A8%E6%9C%9F%E6%80%A7%3C%2Ftd%3E%3C%2Ftr%3E%3C%2Ftable%3E%22%7D\" id=\"cfc691eb\"><table class=\"lake-table\" style=\"outline: none; border-collapse: collapse;\"><colgroup></colgroup><tbody><tr><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">变换</td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">时间</td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">频率</td></tr><tr><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">连续傅里叶变换</td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">连续，非周期性</td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">连续，非周期性</td></tr><tr><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">傅里叶级数</td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">连续，周期性</td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">离散，非周期性</td></tr><tr><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">离散时间傅里叶变换</td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">离散，非周期性</td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">连续，周期性</td></tr><tr><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">离散傅里叶变换</td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">离散，周期性</td><td style=\"min-width: 90px; font-size: 14px; white-space: normal; word-wrap: break-word; border: 1px solid rgb(217, 217, 217); padding: 4px 8px; cursor: default;\">离散，周期性</td></tr></tbody></table></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">如上，容易发现：函数在时（频）域的离散对应于其像函数在频（时）域的周期性。反之连续则意味着在对应域的信号的非周期性。也就是说，时间上的离散性对应着频率上的周期性。同时，注意，离散时间傅里叶变换，时间离散，频率不离散，它在频域依然是连续的。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">如果，读到此，你不甚明白，大没关系，不必纠结于以上4种变体，继续往下看，你自会豁然开朗。（有什么问题，也恳请提出，或者批评指正）</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><strong>ok， 本文，接下来，由傅里叶变换入手，后重点阐述离散傅里叶变换、快速傅里叶算法，到最后彻底实现FFT算法，全篇力求通俗易懂、阅读顺畅，教你从头到尾彻底理解傅里叶变换算法。</strong>由于傅里叶变换，也称傅立叶变换，下文所称为<em>傅立叶变换</em>，同一个变换，不同叫法，读者不必感到奇怪。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><a name=\"第一章、傅立叶变换的由来\"></a><h3 id=\"dd3f2afc\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">第一章、傅立叶变换的由来</h3><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">要理解傅立叶变换，先得知道傅立叶变换是怎么变换的，当然，也需要一定的高等数学基础，最基本的是级数变换，其中傅立叶级数变换是傅立叶变换的基础公式。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><a name=\"一、傅立叶变换的提出\"></a><h4 id=\"faee9111\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">一、傅立叶变换的提出</h4><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">傅立叶是一位法国数学家和物理学家，原名是Jean Baptiste Joseph Fourier(1768-1830)。Fourier于1807年在法国科学学会上发表了一篇论文，论文里描述运用正弦曲线来描述温度分布，论文里有个在当时具有争议性的决断：任何连续周期信号都可以由一组适当的正弦曲线组合而成。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">当时审查这个论文拉格朗日坚决反对此论文的发表，而后在近50年的时间里，拉格朗日坚持认为傅立叶的方法无法表示带有棱角的信号，如在方波中出现非连续变化斜率。直到拉格朗日死后15年这个论文才被发表出来。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">谁是对的呢？拉格朗日是对的：正弦曲线无法组合成一个带有棱角的信号。但是，我们可以用正弦曲线来非常逼近地表示它，逼近到两种表示方法不存在能量差别，基于此，傅立叶是对的。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">为什么我们要用正弦曲线来代替原来的曲线呢？如我们也还可以用方波或三角波来代替呀，分解信号的方法是无穷多的，但分解信号的目的是为了更加简单地处理原来的信号。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">用正余弦来表示原信号会更加简单，因为正余弦拥有原信号所不具有的性质：正弦曲线保真度。一个正余弦曲线信号输入后，输出的仍是正余弦曲线，只有幅度和相位可能发生变化，但是频率和波的形状仍是一样的。且只有正余弦曲线才拥有这样的性质，正因如此我们才不用方波或三角波来表示。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><a name=\"二、傅立叶变换分类\"></a><h4 id=\"2f579e03\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">二、傅立叶变换分类</h4><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">根据原信号的不同类型，我们可以把傅立叶变换分为四种类别：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><ol start=\"1\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>非周期性连续信号\t\t傅立叶变换（Fourier Transform）</li></ol><ol start=\"2\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>周期性连续信号\t\t\t傅立叶级数（Fourier Series）</li></ol><ol start=\"3\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>非周期性离散信号 &nbsp; &nbsp; &nbsp; &nbsp;离散<em>时域</em>傅立叶变换（Discrete Time Fourier Transform）</li></ol><ol start=\"4\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>周期性离散信号\t\t\t离散傅立叶变换（Discrete Fourier Transform）</li></ol><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">下图是四种原信号图例（从上到下，依次是FT，FS，DTFT，DFT）：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22..%2Fimages%2F10-2-1%2F9.jpg%22%2C%22alt%22%3A%22%22%7D\"><img data-role=\"image\" src=\"../images/10-2-1/9.jpg\" data-raw-src=\"../images/10-2-1/9.jpg\" class=\"image lake-drag-image\" style=\"border: none; box-shadow: none; visibility: visible;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">这四种傅立叶变换都是针对正无穷大和负无穷大的信号，即信号的的长度是无穷大的，我们知道这对于计算机处理来说是不可能的，<strong>那么有没有针对长度有限的傅立叶变换呢？</strong>没有。因为正余弦波被定义成从负无穷小到正无穷大，我们无法把一个长度无限的信号组合成长度有限的信号。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">面对这种困难，方法是：把长度有限的信号表示成长度无限的信号。如，可以把信号无限地从左右进行延伸，延伸的部分用零来表示，这样，这个信号就可以被看成是<em>非周期性</em>离散信号，我们可以用到<em>离散时域傅立叶变换（DTFT）</em>的方法。也可以把信号用复制的方法进行延伸，这样信号就变成了<em>周期性</em>离散信号，这时我们就可以用<em>离散傅立叶变换方法（DFT）</em>进行变换。本章我们要讲的是离散信号，对于连续信号我们不作讨论，因为计算机只能处理离散的数值信号，我们的最终目的是运用计算机来处理信号的。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">但是对于非周期性的信号，我们需要用无穷多不同频率的正弦曲线来表示，这对于计算机来说是不可能实现的。所以对于离散信号的变换只有<strong>离散傅立叶变换（DFT）</strong>才能被适用，对于计算机来说只有离散的和有限长度的数据才能被处理，对于其它的变换类型只有在数学演算中才能用到，在计算机面前我们只能用DFT方法，后面我们要理解的也正是DFT方法。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">这里要理解的是我们使用周期性的信号目的是为了能够用数学方法来解决问题，至于考虑周期性信号是从哪里得到或怎样得到是无意义的。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">每种傅立叶变换都分成实数和复数两种方法，对于实数方法是最好理解的，但是复数方法就相对复杂许多了，需要懂得有关复数的理论知识，不过，如果理解了实数离散傅立叶变换(real DFT)，再去理解复数傅立叶变换就更容易了，所以我们先把复数的傅立叶变换放到一边去，先来理解实数傅立叶变换，在后面我们会先讲讲关于复数的基本理论，然后在理解了实数傅立叶变换的基础上再来理解复数傅立叶变换。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">还有，这里我们所要说的变换(transform)虽然是数学意义上的变换，但跟函数变换是不同的，函数变换是符合一一映射准则的，对于离散数字信号处理（DSP），有许多的变换：傅立叶变换、拉普拉斯变换、Z变换、希尔伯特变换、离散余弦变换等，这些都扩展了函数变换的定义，允许输入和输出有多种的值，简单地说变换就是把一堆的数据变成另一堆的数据的方法。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><a name=\"三、一个关于实数离散傅立叶变换(Real-DFT)的例子\"></a><h4 id=\"4303283a\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">三、一个关于实数离散傅立叶变换(Real DFT)的例子</h4><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">先来看一个变换实例，下图是一个原始信号图像：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22..%2Fimages%2F10-2-1%2F10.jpg%22%2C%22alt%22%3A%22%22%7D\"><img data-role=\"image\" src=\"../images/10-2-1/10.jpg\" data-raw-src=\"../images/10-2-1/10.jpg\" class=\"image lake-drag-image\" style=\"border: none; box-shadow: none; visibility: visible;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">这个信号的长度是16，于是可以把这个信号分解9个余弦波和9个正弦波（一个长度为N的信号可以分解成N/2+1个正余弦信号，这是为什么呢？结合下面的18个正余弦图,我想从计算机处理精度上就不难理解，一个长度为N的信号，最多只能有N/2+1个不同频率，再多的频率就超过了计算机所能所处理的精度范围），如下图：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">9个余弦信号：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22..%2Fimages%2F10-2-1%2F11.jpg%22%2C%22alt%22%3A%22%22%7D\"><img data-role=\"image\" src=\"../images/10-2-1/11.jpg\" data-raw-src=\"../images/10-2-1/11.jpg\" class=\"image lake-drag-image\" style=\"border: none; box-shadow: none; visibility: visible;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">9个正弦信号：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22..%2Fimages%2F10-2-1%2F12.jpg%22%2C%22alt%22%3A%22%22%7D\"><img data-role=\"image\" src=\"../images/10-2-1/12.jpg\" data-raw-src=\"../images/10-2-1/12.jpg\" class=\"image lake-drag-image\" style=\"border: none; box-shadow: none; visibility: visible;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">把以上所有信号相加即可得到原始信号，至于是怎么分别变换出9种不同频率信号的，我们先不急，先看看对于以上的变换结果，在程序中又是该怎么表示的，我们可以看看下面这个示例图：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22..%2Fimages%2F10-2-1%2F13.jpg%22%2C%22alt%22%3A%22%22%7D\"><img data-role=\"image\" src=\"../images/10-2-1/13.jpg\" data-raw-src=\"../images/10-2-1/13.jpg\" class=\"image lake-drag-image\" style=\"border: none; box-shadow: none; visibility: visible;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">上图中左边表示时域中的信号，右边是频域信号表示方法，</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">从左向右，<strong>--&gt;</strong>，表示<strong>正向转换</strong>(Forward DFT)，从右向左，&lt;--，表示<strong>逆向转换</strong>(Inverse DFT)，<br>\n用小写x[]表示信号在每个时间点上的幅度值数组, 用大写X[]表示每种频率的副度值数组（即时间x--&gt;频率<strong>X</strong>）,</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">因为有N/2+1种频率，所以该数组长度为N/2+1，</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">X[]数组又分两种，一种是表示余弦波的不同频率幅度值：Re X[]，</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">另一种是表示正弦波的不同频率幅度值：Im X[]，</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">Re是实数(Real)的意思，Im是虚数(Imagine)的意思，采用复数的表示方法把正余弦波组合起来进行表示，但这里我们不考虑复数的其它作用，只记住是一种组合方法而已，目的是为了便于表达（在后面我们会知道，复数形式的傅立叶变换长度是N，而不是N/2+1）。如此，再回过头去，看上面的正余弦各9种频率的变化，相信，问题不大了。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><a name=\"第二章、实数形式离散傅立叶变换（Real-DFT）\"></a><h3 id=\"451baa33\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">第二章、实数形式离散傅立叶变换（Real DFT）</h3><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">上一章，我们看到了一个实数形式离散傅立叶变换的例子，通过这个例子能够让我们先对傅立叶变换有一个较为形象的感性认识，现在就让我们来看看实数形式离散傅立叶变换的正向和逆向是怎么进行变换的。在此，我们先来看一下频率的多种表示方法。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><a name=\"一、-&nbsp;-频域中关于频率的四种表示方法\"></a><h4 id=\"b52cf2bb\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">一、 &nbsp; 频域中关于频率的四种表示方法</h4><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><ol start=\"1\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>序号表示方法，根据时域中信号的样本数取0 ~ N/2，用这种方法在程序中使用起来可以更直接地取得每种频率的幅度值，因为频率值跟数组的序号是一一对应的: X[k]，取值范围是0 ~ N/2；</li></ol><ol start=\"2\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>分数表示方法，根据时域中信号的样本数的比例值取0 ~ 0.5: X[ƒ]，ƒ = k/N，取值范围是0 ~ 1/2；</li></ol><ol start=\"3\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>用弧度值来表示，把ƒ乘以一个2π得到一个弧度值，这种表示方法叫做自然频率(natural frequency)：X[ω]，ω = 2πƒ = 2πk/N，取值范围是0 ~ π；</li></ol><ol start=\"4\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>以赫兹(Hz)为单位来表示，这个一般是应用于一些特殊应用，如取样率为10 kHz表示每秒有10,000个样本数：取值范围是0到取样率的一半。</li></ol><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><a name=\"二、-&nbsp;-DFT基本函数\"></a><h4 id=\"87df2de9\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">二、 &nbsp; DFT基本函数</h4><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">ck[i] = cos(2πki/N)<br>\nsk[i] = sin(2πki/N)</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">其中k表示每个正余弦波的频率，如为2表示在0到N长度中存在两个完整的周期，10即有10个周期，如下图：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22..%2Fimages%2F10-2-1%2F14.jpg%22%2C%22alt%22%3A%22%22%7D\"><img data-role=\"image\" src=\"../images/10-2-1/14.jpg\" data-raw-src=\"../images/10-2-1/14.jpg\" class=\"image lake-drag-image\" style=\"border: none; box-shadow: none; visibility: visible;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">上图中至于每个波的振幅(amplitude)值(Re X[k],Im X[k])是怎么算出来的,这个是DFT的核心，也是最难理解的部分，我们先来看看如何把分解出来的正余弦波合成原始信号(Inverse DFT)。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><a name=\"三、-&nbsp;-合成运算方法(Real-Inverse-DFT)\"></a><h4 id=\"22106d26\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">三、 &nbsp; 合成运算方法(Real Inverse DFT)</h4><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">DFT合成等式（合成原始<strong><em>时间</em>信号，频率--&gt;时间，逆向变换</strong>）：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22..%2Fimages%2F10-2-1%2F15.jpg%22%2C%22alt%22%3A%22%22%7D\"><img data-role=\"image\" src=\"../images/10-2-1/15.jpg\" data-raw-src=\"../images/10-2-1/15.jpg\" class=\"image lake-drag-image\" style=\"border: none; box-shadow: none; visibility: visible;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">如果有学过傅立叶级数，对这个等式就会有似曾相识的感觉，不错！这个等式跟傅立叶级数是非常相似的：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22..%2Fimages%2F10-2-1%2F16.jpg%22%2C%22alt%22%3A%22%22%7D\"><img data-role=\"image\" src=\"../images/10-2-1/16.jpg\" data-raw-src=\"../images/10-2-1/16.jpg\" class=\"image lake-drag-image\" style=\"border: none; box-shadow: none; visibility: visible;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">当然，差别是肯定是存在的，因为这两个等式是在两个不同条件下运用的，至于怎么证明DFT合成公式，这个我想需要非常强的高等数学理论知识了，这是研究数学的人的工作，对于普通应用者就不需要如此的追根究底了，但是傅立叶级数是好理解的，我们起码可以从傅立叶级数公式中看出DFT合成公式的合理性。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">DFT合成等式中的<span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22..%2Fimages%2F10-2-1%2F21.jpg%22%2C%22alt%22%3A%22%22%7D\"><img data-role=\"image\" src=\"../images/10-2-1/21.jpg\" data-raw-src=\"../images/10-2-1/21.jpg\" class=\"image lake-drag-image\" style=\"border: none; box-shadow: none; visibility: visible;\"></span> <em>跟之前提到的</em> Im X[k]和Re X[k]是不一样的，下面是转换方法（<em>关于此公式的解释，见下文</em>）:</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22..%2Fimages%2F10-2-1%2F17.jpg%22%2C%22alt%22%3A%22%22%7D\"><img data-role=\"image\" src=\"../images/10-2-1/17.jpg\" data-raw-src=\"../images/10-2-1/17.jpg\" class=\"image lake-drag-image\" style=\"border: none; box-shadow: none; visibility: visible;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">但k等于0和N/2时,实数部分的计算要用下面的等式:</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22..%2Fimages%2F10-2-1%2F18.jpg%22%2C%22alt%22%3A%22%22%7D\"><img data-role=\"image\" src=\"../images/10-2-1/18.jpg\" data-raw-src=\"../images/10-2-1/18.jpg\" class=\"image lake-drag-image\" style=\"border: none; box-shadow: none; visibility: visible;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">上面四个式中的N是时域中点的总数，k是从0到N/2的序号。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">为什么要这样进行转换呢？这个可以从频谱密度(spectral density)得到理解，如下图就是个频谱图：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22..%2Fimages%2F10-2-1%2F19.jpg%22%2C%22alt%22%3A%22%22%7D\"><img data-role=\"image\" src=\"../images/10-2-1/19.jpg\" data-raw-src=\"../images/10-2-1/19.jpg\" class=\"image lake-drag-image\" style=\"border: none; box-shadow: none; visibility: visible;\"></span></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">这是一个频谱图，横坐标表示频率大小，纵坐标表示振幅大小，原始信号长度为N（这里是32），经DFT转换后得到的<strong>17</strong>个频率的频谱，频谱密度表示每单位带宽中为多大的振幅，那么带宽是怎么计算出来的呢？看上图，除了头尾两个，其余点的所占的宽度是2/N，这个宽度便是每个点的带宽，头尾两个点的带宽是1/N,而Im X[k]和Re X[k]表示的是频谱密度，即每一个单位带宽的振幅大小，但 <span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22..%2Fimages%2F10-2-1%2F20.jpg%22%2C%22alt%22%3A%22%22%7D\"><img data-role=\"image\" src=\"../images/10-2-1/20.jpg\" data-raw-src=\"../images/10-2-1/20.jpg\" class=\"image lake-drag-image\" style=\"border: none; box-shadow: none; visibility: visible;\"></span> 表示2/N（或1/N）带宽的振幅大小， <strong>所以</strong><span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22..%2Fimages%2F10-2-1%2F21.jpg%22%2C%22alt%22%3A%22%22%7D\"><img data-role=\"image\" src=\"../images/10-2-1/21.jpg\" data-raw-src=\"../images/10-2-1/21.jpg\" class=\"image lake-drag-image\" style=\"border: none; box-shadow: none; visibility: visible;\"></span><strong>分别应当是Im X[k]和Re X[k]的2/N（或1/N）</strong>。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">频谱密度就象物理中物质密度，原始信号中的每一个点就象是一个混合物，这个混合物是由不同密度的物质组成的，混合物中含有的每种物质的质量是一样的，除了最大和最小两个密度的物质外，这样我们只要把每种物质的密度加起来就可以得到该混合物的密度了，又该混合物的质量是单位质量，所以得到的密度值跟该混合物的质量值是一样的。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">至于为什么虚数部分是负数，这是为了跟复数DFT保持一致，这个我们将在后面会知道这是数学计算上的需要（Im X[k]在计算时就已经加上了一个负号（<em>稍后，由下文，便可知</em>），<span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22..%2Fimages%2F10-2-1%2F24.jpg%22%2C%22alt%22%3A%22%22%7D\"><img data-role=\"image\" src=\"../images/10-2-1/24.jpg\" data-raw-src=\"../images/10-2-1/24.jpg\" class=\"image lake-drag-image\" style=\"border: none; box-shadow: none; visibility: visible;\"></span>再加上负号，结果便是正的，等于没有变化）。</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">如果已经得到了DFT结果，这时要进行<strong>逆转换，即合成原始信号</strong>，则可按如下步骤进行转换：</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><ol start=\"1\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>先根据上面四个式子计算得出<span data-card-type=\"inline\" data-lake-card=\"image\" data-card-value=\"data:%7B%22src%22%3A%22..%2Fimages%2F10-2-1%2F21.jpg%22%2C%22alt%22%3A%22%22%7D\"><img data-role=\"image\" src=\"../images/10-2-1/21.jpg\" data-raw-src=\"../images/10-2-1/21.jpg\" class=\"image lake-drag-image\" style=\"border: none; box-shadow: none; visibility: visible;\"></span>的值；</li></ol><ol start=\"2\" lake-indent=\"0\" style=\"list-style-type: decimal; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><li>再根据DFT合成等式得到原始信号数据。\n<br>下面是用BASIC语言来实现的转换源代码：</li></ol><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%221bf8aa47%22%2C%22code%22%3A%22%E2%80%98DFT%E9%80%86%E8%BD%AC%E6%8D%A2%E6%96%B9%E6%B3%95%5Cn%E2%80%98%2FXX%5B%5D%E6%95%B0%E7%BB%84%E5%AD%98%E5%82%A8%E8%AE%A1%E7%AE%97%E7%BB%93%E6%9E%9C%EF%BC%88%E6%97%B6%E5%9F%9F%E4%B8%AD%E7%9A%84%E5%8E%9F%E5%A7%8B%E4%BF%A1%E5%8F%B7%EF%BC%89%5Cn%E2%80%98%2FREX%5B%5D%E6%95%B0%E7%BB%84%E5%AD%98%E5%82%A8%E9%A2%91%E5%9F%9F%E4%B8%AD%E7%9A%84%E5%AE%9E%E6%95%B0%E5%88%86%E9%87%8F%EF%BC%8CIMX%5B%5D%E4%B8%BA%E8%99%9A%E5%88%86%E9%87%8F%5Cn%E2%80%98%5CnDIM%20XX%5B511%5D%5CnDIM%20REX%5B256%5D%5CnDIM%20IMX%5B256%5D%5Cn%E2%80%98%5CnPI%20%3D%203.14159265%5CnN%25%20%3D%20512%5Cn%E2%80%98%5CnGOSUB%20XXXX%20%E2%80%98%E8%BD%AC%E5%88%B0%E5%AD%90%E5%87%BD%E6%95%B0%E5%8E%BB%E8%8E%B7%E5%8F%96REX%5B%5D%E5%92%8CIMX%5B%5D%E6%95%B0%E6%8D%AE%5Cn%E2%80%98%5Cn%E2%80%98%5Cn%E2%80%98%5CnFOR%20K%25%20%3D%200%20TO%20256%5Cn%20%20REX%5BK%25%5D%20%3D%20REX%5BK%25%5D%20%2F%20(N%25%2F2)%5Cn%20%20IMX%5BK%25%5D%20%3D%20-IMX%5BK%25%5D%20%2F%20(N%25%2F2)%5CnNEXT%20k%25%5Cn%E2%80%98%5CnREX%5B0%5D%20%3D%20REX%5B0%5D%20%2F%20N%5CnREX%5B256%5D%20%3D%20REX%5B256%5D%20%2F%20N%5Cn%E2%80%98%5Cn%E2%80%98%20%E5%88%9D%E5%A7%8B%E5%8C%96XX%5B%5D%E6%95%B0%E7%BB%84%5CnFOR%20I%25%20%3D%200%20TO%20511%5Cn%20%20XX%5BI%25%5D%20%3D%200%5CnNEXT%20I%25%5Cn%E2%80%98%5Cn%E2%80%98%5Cn%E2%80%98%5Cn%E2%80%98%5Cn%E2%80%98%5CnFOR%20K%25%20%3D0%20TO%20256%5Cn%20%20FOR%20I%25%3D0%20TO%20511%5Cn%E2%80%98%5Cn%20%20%20%20%20XX%5BI%25%5D%20%3D%20XX%5BI%25%5D%20%2B%20REX%5BK%25%5D%20*%20COS(2%20*%20PI%20*%20K%25%20*%20I%25%20%2F%20N%25)%20%5Cn%20%20%20%20%20XX%5BI%25%5D%20%3D%20XX%5BI%25%5D%20%2B%20IMX%5BK%25%5D%20*%20SIN(2%20*%20PI%20*%20K%25%20*%20I%25%20%2F%20N%25)%5Cn%E2%80%98%5Cn%20%20NEXT%20I%25%5CnNEXT%20K%25%5Cn%E2%80%98%5CnEND%5Cn%20%20%60%60%60%5Cn%20%20%5Cn%E4%B8%8A%E9%9D%A2%E4%BB%A3%E7%A0%81%E4%B8%AD420%E8%87%B3490%E6%8D%A2%E6%88%90%E5%A6%82%E4%B8%8B%E5%BD%A2%E5%BC%8F%E4%B9%9F%E8%AE%B8%E6%9B%B4%E5%A5%BD%E7%90%86%E8%A7%A3%EF%BC%8C%E4%BD%86%E7%BB%93%E6%9E%9C%E9%83%BD%E6%98%AF%E4%B8%80%E6%A0%B7%E7%9A%84%EF%BC%9A%22%7D\" id=\"1bf8aa47\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">‘DFT逆转换方法\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">‘/XX[]数组存储计算结果（时域中的原始信号）\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">‘/REX[]数组存储频域中的实数分量，IMX[]为虚分量\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">‘\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">DIM XX[511]\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">DIM REX[256]\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">DIM IMX[256]\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">‘\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">PI = 3.14159265\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">N% = 512\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">‘\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">GOSUB XXXX ‘转到子函数去获取REX[]和IMX[]数据\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">‘\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">‘\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">‘\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">FOR K% = 0 TO 256\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  REX[K%] = REX[K%] / (N%/2)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  IMX[K%] = -IMX[K%] / (N%/2)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">NEXT k%\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">‘\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">REX[0] = REX[0] / N\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">REX[256] = REX[256] / N\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">‘\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">‘ 初始化XX[]数组\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">FOR I% = 0 TO 511\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  XX[I%] = 0\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">NEXT I%\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">‘\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">‘\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">‘\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">‘\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">‘\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">FOR K% =0 TO 256\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  FOR I%=0 TO 511\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">‘\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">     XX[I%] = XX[I%] + REX[K%] * COS(2 * PI * K% * I% / N%) \n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">     XX[I%] = XX[I%] + IMX[K%] * SIN(2 * PI * K% * I% / N%)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">‘\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  NEXT I%\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">NEXT K%\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">‘\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">END\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  ```\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">  \n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">上面代码中420至490换成如下形式也许更好理解，但结果都是一样的：</span></span></pre></div></div></div><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\">FOR I% =0 TO 511<br>\nFOR K%=0 TO 256<br>\n‘<br>\nXX[I%] = XX[I%] + REX[K%] <em> COS(2 </em> PI <em> K% </em> I% / N%)<br>\nXX[I%] = XX[I%] + IMX[K%] <em> SIN(2 </em> PI <em> K% </em> I% / N%)<br>\n‘<br>\nNEXT I%<br>\nNEXT K%</p><p style=\"font-size: 14px; color: rgb(38, 38, 38); letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; line-height: 1.74; margin: 0px;\"><br></p><div data-card-type=\"block\" data-lake-card=\"codeblock\" data-card-value=\"data:%7B%22id%22%3A%220ffa5a09%22%2C%22code%22%3A%22%5Cn%23%23%23%23%20%E5%9B%9B%E3%80%81%20%20%20%E5%88%86%E8%A7%A3%E8%BF%90%E7%AE%97%E6%96%B9%E6%B3%95%EF%BC%88DFT%EF%BC%89%5Cn%5Cn%E6%9C%89%E4%B8%89%E7%A7%8D%E5%AE%8C%E5%85%A8%E4%B8%8D%E5%90%8C%E7%9A%84%E6%96%B9%E6%B3%95%E8%BF%9B%E8%A1%8CDFT%EF%BC%9A*%E4%B8%80%E7%A7%8D%E6%96%B9%E6%B3%95%E6%98%AF%E9%80%9A%E8%BF%87%E8%81%94%E7%AB%8B%E6%96%B9%E7%A8%8B%E8%BF%9B%E8%A1%8C%E6%B1%82%E8%A7%A3*%2C%20%E4%BB%8E%E4%BB%A3%E6%95%B0%E7%9A%84%E8%A7%92%E5%BA%A6%E7%9C%8B%EF%BC%8C%E8%A6%81%E4%BB%8EN%E4%B8%AA%E5%B7%B2%E7%9F%A5%E5%80%BC%E6%B1%82N%E4%B8%AA%E6%9C%AA%E7%9F%A5%E5%80%BC%EF%BC%8C%E9%9C%80%E8%A6%81N%E4%B8%AA%E8%81%94%E7%AB%8B%E6%96%B9%E7%A8%8B%EF%BC%8C%E4%B8%94N%E4%B8%AA%E8%81%94%E7%AB%8B%E6%96%B9%E7%A8%8B%E5%BF%85%E9%A1%BB%E6%98%AF%E7%BA%BF%E6%80%A7%E7%8B%AC%E7%AB%8B%E7%9A%84%EF%BC%8C%E4%BD%86%E8%BF%99%E6%98%AF%E8%BF%99%E7%A7%8D%E6%96%B9%E6%B3%95%E8%AE%A1%E7%AE%97%E9%87%8F%E9%9D%9E%E5%B8%B8%E7%9A%84%E5%A4%A7%E4%B8%94%E6%9E%81%E5%85%B6%E5%A4%8D%E6%9D%82%EF%BC%8C%E6%89%80%E4%BB%A5%E5%BE%88%E5%B0%91%E8%A2%AB%E9%87%87%E7%94%A8%EF%BC%9B*%E7%AC%AC%E4%BA%8C%E7%A7%8D%E6%96%B9%E6%B3%95%E6%98%AF%E5%88%A9%E7%94%A8%E4%BF%A1%E5%8F%B7%E7%9A%84%E7%9B%B8%E5%85%B3%E6%80%A7%EF%BC%88correlation%EF%BC%89*%E8%BF%9B%E8%A1%8C%E8%AE%A1%E7%AE%97%EF%BC%8C%E8%BF%99%E4%B8%AA%E6%98%AF%E6%88%91%E4%BB%AC%E5%90%8E%E9%9D%A2%E5%B0%86%E8%A6%81%E4%BB%8B%E7%BB%8D%E7%9A%84%E6%96%B9%E6%B3%95%EF%BC%9B*%E7%AC%AC%E4%B8%89%E7%A7%8D%E6%96%B9%E6%B3%95%E6%98%AF%E5%BF%AB%E9%80%9F%E5%82%85%E7%AB%8B%E5%8F%B6%E5%8F%98%E6%8D%A2%EF%BC%88FFT%EF%BC%89*%EF%BC%8C%E8%BF%99%E6%98%AF%E4%B8%80%E4%B8%AA%E9%9D%9E%E5%B8%B8%E5%85%B7%E6%9C%89%E5%88%9B%E9%80%A0%E6%80%A7%E5%92%8C%E9%9D%A9%E5%91%BD%E6%80%A7%E7%9A%84%E7%9A%84%E6%96%B9%E6%B3%95%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E5%A4%A7%E5%A4%A7%E6%8F%90%E9%AB%98%E4%BA%86%E8%BF%90%E7%AE%97%E9%80%9F%E5%BA%A6%EF%BC%8C%E4%BD%BF%E5%BE%97%E5%82%85%E7%AB%8B%E5%8F%B6%E5%8F%98%E6%8D%A2%E8%83%BD%E5%A4%9F%E5%9C%A8%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%AD%E8%A2%AB%E5%B9%BF%E6%B3%9B%E5%BA%94%E7%94%A8%EF%BC%8C%E4%BD%86%E8%BF%99%E7%A7%8D%E7%AE%97%E6%B3%95%E6%98%AF%E6%A0%B9%E6%8D%AE%E5%A4%8D%E6%95%B0%E5%BD%A2%E5%BC%8F%E7%9A%84%E5%82%85%E7%AB%8B%E5%8F%B6%E5%8F%98%E6%8D%A2%E6%9D%A5%E5%AE%9E%E7%8E%B0%E7%9A%84%EF%BC%8C%E5%AE%83%E6%8A%8AN%E4%B8%AA%E7%82%B9%E7%9A%84%E4%BF%A1%E5%8F%B7%E5%88%86%E8%A7%A3%E6%88%90%E9%95%BF%E5%BA%A6%E4%B8%BAN%E7%9A%84%E9%A2%91%E5%9F%9F%EF%BC%8C%E8%BF%99%E4%B8%AA%E8%B7%9F%E6%88%91%E4%BB%AC%E7%8E%B0%E5%9C%A8%E6%89%80%E8%BF%9B%E8%A1%8C%E7%9A%84%E5%AE%9E%E5%9F%9FDFT%E5%8F%98%E6%8D%A2%E4%B8%8D%E4%B8%80%E6%A0%B7%EF%BC%8C%E8%80%8C%E4%B8%94%E8%BF%99%E7%A7%8D%E6%96%B9%E6%B3%95%E4%B9%9F%E8%BE%83%E9%9A%BE%E7%90%86%E8%A7%A3%EF%BC%8C%E8%BF%99%E9%87%8C%E6%88%91%E4%BB%AC%E5%85%88%E4%B8%8D%E5%8E%BB%E7%90%86%E8%A7%A3%EF%BC%8C%E7%AD%89%E5%85%88%E7%90%86%E8%A7%A3%E4%BA%86%E5%A4%8D%E6%95%B0DFT%E5%90%8E%EF%BC%8C%E5%86%8D%E6%9D%A5%E7%9C%8B%E4%B8%80%E4%B8%8BFFT%E3%80%82%E6%9C%89%E4%B8%80%E7%82%B9%E5%BE%88%E9%87%8D%E8%A6%81%EF%BC%8C%E9%82%A3%E5%B0%B1%E6%98%AF%E8%BF%99%E4%B8%89%E7%A7%8D%E6%96%B9%E6%B3%95%E6%89%80%E5%BE%97%E7%9A%84%E5%8F%98%E6%8D%A2%E7%BB%93%E6%9E%9C%E6%98%AF%E4%B8%80%E6%A0%B7%E7%9A%84%EF%BC%8C%E7%BB%8F%E8%BF%87%E5%AE%9E%E8%B7%B5%E8%AF%81%E6%98%8E%EF%BC%8C%E5%BD%93%E9%A2%91%E5%9F%9F%E9%95%BF%E5%BA%A6%E4%B8%BA32%E6%97%B6%EF%BC%8C%E5%88%A9%E7%94%A8%E7%9B%B8%E5%85%B3%E6%80%A7%E6%96%B9%E6%B3%95%E8%BF%9B%E8%A1%8C%E8%AE%A1%E7%AE%97%E6%95%88%E7%8E%87%E6%9C%80%E5%A5%BD%EF%BC%8C%E5%90%A6%E5%88%99FFT%E7%AE%97%E6%B3%95%E6%95%88%E7%8E%87%E8%BE%83%E9%AB%98%E3%80%82%E7%8E%B0%E5%9C%A8%E5%B0%B1%E8%AE%A9%E6%88%91%E4%BB%AC%E6%9D%A5%E7%9C%8B%E4%B8%80%E4%B8%8B%E7%9B%B8%E5%85%B3%E6%80%A7%E7%AE%97%E6%B3%95%E3%80%82%5Cn%5Cn%E5%88%A9%E7%94%A8**%E7%AC%AC%E4%B8%80%E7%A7%8D%E6%96%B9%E6%B3%95%E3%80%81%E4%BF%A1%E5%8F%B7%E7%9A%84%E7%9B%B8%E5%85%B3%E6%80%A7**(correlation)%E5%8F%AF%E4%BB%A5%E4%BB%8E%E5%99%AA%E5%A3%B0%E8%83%8C%E6%99%AF%E4%B8%AD%E6%A3%80%E6%B5%8B%E5%87%BA%E5%B7%B2%E7%9F%A5%E7%9A%84%E4%BF%A1%E5%8F%B7%EF%BC%8C%E6%88%91%E4%BB%AC%E4%B9%9F%E5%8F%AF%E4%BB%A5%E5%88%A9%E7%94%A8%E8%BF%99%E4%B8%AA%E6%96%B9%E6%B3%95%E6%A3%80%E6%B5%8B%E4%BF%A1%E5%8F%B7%E6%B3%A2%E4%B8%AD%E6%98%AF%E5%90%A6%E5%90%AB%E6%9C%89%E6%9F%90%E4%B8%AA%E9%A2%91%E7%8E%87%E7%9A%84%E4%BF%A1%E5%8F%B7%E6%B3%A2%EF%BC%9A%E6%8A%8A%E4%B8%80%E4%B8%AA%E5%BE%85%E6%A3%80%E6%B5%8B%E4%BF%A1%E5%8F%B7%E6%B3%A2%E4%B9%98%E4%BB%A5%E5%8F%A6%E4%B8%80%E4%B8%AA%E4%BF%A1%E5%8F%B7%E6%B3%A2%EF%BC%8C%E5%BE%97%E5%88%B0%E4%B8%80%E4%B8%AA%E6%96%B0%E7%9A%84%E4%BF%A1%E5%8F%B7%E6%B3%A2%EF%BC%8C%E5%86%8D%E6%8A%8A%E8%BF%99%E4%B8%AA%E6%96%B0%E7%9A%84%E4%BF%A1%E5%8F%B7%E6%B3%A2%E6%89%80%E6%9C%89%E7%9A%84%E7%82%B9%E8%BF%9B%E8%A1%8C%E7%9B%B8%E5%8A%A0%EF%BC%8C%E4%BB%8E%E7%9B%B8%E5%8A%A0%E7%9A%84%E7%BB%93%E6%9E%9C%E5%B0%B1%E5%8F%AF%E4%BB%A5%E5%88%A4%E6%96%AD%E5%87%BA%E8%BF%99%E4%B8%A4%E4%B8%AA%E4%BF%A1%E5%8F%B7%E7%9A%84%E7%9B%B8%E4%BC%BC%E7%A8%8B%E5%BA%A6%E3%80%82%E5%A6%82%E4%B8%8B%E5%9B%BE%EF%BC%9A%5Cn%5Cn!%5B%5D(..%2Fimages%2F10-2-1%2F22.jpg)%5Cn%5Cn%E4%B8%8A%E9%9D%A2a%E5%92%8C%20b%E4%B8%A4%E4%B8%AA%E5%9B%BE%E6%98%AF%E5%BE%85%E6%A3%80%E6%B5%8B%E4%BF%A1%E5%8F%B7%E6%B3%A2%EF%BC%8C%E5%9B%BEa%E5%BE%88%E6%98%8E%E6%98%BE%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%87%BA%E6%98%AF%E4%B8%AA3%E4%B8%AA%E5%91%A8%E6%9C%9F%E7%9A%84%E6%AD%A3%E5%BC%A6%E4%BF%A1%E5%8F%B7%E6%B3%A2%EF%BC%8C%E5%9B%BEb%E7%9A%84%E4%BF%A1%E5%8F%B7%E6%B3%A2%E5%88%99%E7%9C%8B%E4%B8%8D%E5%87%BA%E6%98%AF%E5%90%A6%E5%90%AB%E6%9C%89%E6%AD%A3%E5%BC%A6%E6%88%96%E4%BD%99%E5%BC%A6%E4%BF%A1%E5%8F%B7%EF%BC%8C%E5%9B%BEc%E5%92%8Cd%E9%83%BD%E6%98%AF%E4%B8%AA3%E4%B8%AA%E5%91%A8%E6%9C%9F%E7%9A%84%E6%AD%A3%E5%BC%A6%E4%BF%A1%E5%8F%B7%E6%B3%A2%EF%BC%8C%E5%9B%BEe%E5%92%8Cf%E5%88%86%E5%88%AB%E6%98%AFa%E3%80%81b%E4%B8%A4%E5%9B%BE%E8%B7%9Fc%E3%80%81d%E4%B8%A4%E5%9B%BE%E7%9B%B8%E4%B9%98%E5%90%8E%E7%9A%84%E7%BB%93%E6%9E%9C%EF%BC%8C%E5%9B%BEe%E6%89%80%E6%9C%89%E7%82%B9%E7%9A%84%E5%B9%B3%E5%9D%87%E5%80%BC%E6%98%AF0.5%EF%BC%8C%E8%AF%B4%E6%98%8E%E4%BF%A1%E5%8F%B7a%E5%90%AB%E6%9C%89%E6%8C%AF%E5%B9%85%E4%B8%BA1%E7%9A%84%E6%AD%A3%E5%BC%A6%E4%BF%A1%E5%8F%B7c%EF%BC%8C%E4%BD%86%E5%9B%BEf%E6%89%80%E6%9C%89%E7%82%B9%E7%9A%84%E5%B9%B3%E5%9D%87%E5%80%BC%E6%98%AF0%EF%BC%8C%E5%88%99%E8%AF%B4%E6%98%8E%E4%BF%A1%E5%8F%B7b%E4%B8%8D%E5%90%AB%E6%9C%89%E4%BF%A1%E5%8F%B7d%E3%80%82%E8%BF%99%E4%B8%AA%E5%B0%B1%E6%98%AF%E9%80%9A%E8%BF%87%E4%BF%A1%E5%8F%B7%E7%9B%B8%E5%85%B3%E6%80%A7%E6%9D%A5%E6%A3%80%E6%B5%8B%E6%98%AF%E5%90%A6%E5%90%AB%E6%9C%89%E6%9F%90%E4%B8%AA%E4%BF%A1%E5%8F%B7%E7%9A%84%E6%96%B9%E6%B3%95%E3%80%82%5Cn%5Cn**%E7%AC%AC%E4%BA%8C%E7%A7%8D%E6%96%B9%E6%B3%95%EF%BC%9A**%20%E7%9B%B8%E5%BA%94%E5%9C%B0%EF%BC%8C%E6%88%91%E4%B9%9F%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87%E6%8A%8A%E8%BE%93%E5%85%A5%E4%BF%A1%E5%8F%B7%E5%92%8C%E6%AF%8F%E4%B8%80%E7%A7%8D%E9%A2%91%E7%8E%87%E7%9A%84%E6%AD%A3%E4%BD%99%E5%BC%A6%E4%BF%A1%E5%8F%B7%E8%BF%9B%E8%A1%8C%E7%9B%B8%E4%B9%98%EF%BC%88**%E5%85%B3%E8%81%94%E6%93%8D%E4%BD%9C**%EF%BC%89%EF%BC%8C%E4%BB%8E%E8%80%8C%E5%BE%97%E5%88%B0%E5%8E%9F%E5%A7%8B%E4%BF%A1%E5%8F%B7%E4%B8%8E%E6%AF%8F%E7%A7%8D%E9%A2%91%E7%8E%87%E7%9A%84%E5%85%B3%E8%81%94%E7%A8%8B%E5%BA%A6%EF%BC%88%E5%8D%B3%E6%80%BB%E5%92%8C%E5%A4%A7%E5%B0%8F%EF%BC%89%EF%BC%8C%E8%BF%99%E4%B8%AA%E7%BB%93%E6%9E%9C%E4%BE%BF%E6%98%AF%E6%88%91%E4%BB%AC%E6%89%80%E8%A6%81%E7%9A%84%E5%82%85%E7%AB%8B%E5%8F%B6%E5%8F%98%E6%8D%A2%E7%BB%93%E6%9E%9C%EF%BC%8C%E4%B8%8B%E9%9D%A2%E4%B8%A4%E4%B8%AA%E7%AD%89%E5%BC%8F%E4%BE%BF%E6%98%AF%E6%88%91%E4%BB%AC%E6%89%80%E8%A6%81%E7%9A%84%E8%AE%A1%E7%AE%97%E6%96%B9%E6%B3%95%EF%BC%9A%5Cn%5Cn!%5B%5D(..%2Fimages%2F10-2-1%2F23.jpg)%5Cn%5Cn%E7%AC%AC%E4%BA%8C%E4%B8%AA%E5%BC%8F%E5%AD%90%E4%B8%AD%E5%8A%A0%E4%BA%86%E4%B8%AA%E8%B4%9F%E5%8F%B7%EF%BC%8C%E6%98%AF%E4%B8%BA%E4%BA%86%E4%BF%9D%E6%8C%81%E5%A4%8D%E6%95%B0%E5%BD%A2%E5%BC%8F%E7%9A%84%E4%B8%80%E8%87%B4%EF%BC%8C*%E5%89%8D%E9%9D%A2%E6%88%91%E4%BB%AC%E7%9F%A5%E9%81%93%E5%9C%A8%E8%AE%A1%E7%AE%97*!%5B%5D(..%2Fimages%2F10-2-1%2F24.jpg)*%E6%97%B6%E5%8F%88%E5%8A%A0%E4%BA%86%E4%B8%AA%E8%B4%9F%E5%8F%B7*%EF%BC%8C%E6%89%80%E4%BB%A5%E8%BF%99%E5%8F%AA%E6%98%AF%E4%B8%AA%E5%BD%A2%E5%BC%8F%E7%9A%84%E9%97%AE%E9%A2%98%EF%BC%8C%E5%B9%B6%E6%B2%A1%E6%9C%89%E5%AE%9E%E9%99%85%E6%84%8F%E4%B9%89%EF%BC%8C%E4%BD%A0%E4%B9%9F%E5%8F%AF%E4%BB%A5%E6%8A%8A%E8%B4%9F%E5%8F%B7%E5%8E%BB%E6%8E%89%EF%BC%8C%E5%B9%B6%E5%9C%A8%E8%AE%A1%E7%AE%97!%5B%5D(..%2Fimages%2F10-2-1%2F25.jpg)%E6%97%B6%E4%B9%9F%E4%B8%8D%E5%8A%A0%E8%B4%9F%E5%8F%B7%E3%80%82%5Cn%5Cn%E8%BF%99%E9%87%8C%E6%9C%89%E4%B8%80%E7%82%B9%E5%BF%85%E9%A1%BB%E6%98%8E%E7%99%BD%E4%B8%80%E4%B8%AA%E6%AD%A3%E4%BA%A4%E7%9A%84%E6%A6%82%E5%BF%B5%EF%BC%9A%E4%B8%A4%E4%B8%AA%E5%87%BD%E6%95%B0%E7%9B%B8%E4%B9%98%EF%BC%8C%E5%A6%82%E6%9E%9C%E7%BB%93%E6%9E%9C%E4%B8%AD%E7%9A%84%E6%AF%8F%E4%B8%AA%E7%82%B9%E7%9A%84%E6%80%BB%E5%92%8C%E4%B8%BA0%EF%BC%8C%E5%88%99%E5%8F%AF%E8%AE%A4%E4%B8%BA%E8%BF%99%E4%B8%A4%E4%B8%AA%E5%87%BD%E6%95%B0%E4%B8%BA%E6%AD%A3%E4%BA%A4%E5%87%BD%E6%95%B0%E3%80%82%E8%A6%81%E7%A1%AE%E4%BF%9D%E5%85%B3%E8%81%94%E6%80%A7%E7%AE%97%E6%B3%95%E6%98%AF%E6%AD%A3%E7%A1%AE%E7%9A%84%EF%BC%8C%E5%88%99%E5%BF%85%E9%A1%BB%E4%BD%BF%E5%BE%97%E8%B7%9F%E5%8E%9F%E5%A7%8B%E4%BF%A1%E5%8F%B7%E7%9B%B8%E4%B9%98%E7%9A%84%E4%BF%A1%E5%8F%B7%E7%9A%84%E5%87%BD%E6%95%B0%E5%BD%A2%E5%BC%8F%E6%98%AF%E6%AD%A3%E4%BA%A4%E7%9A%84%EF%BC%8C%E6%88%91%E4%BB%AC%E7%9F%A5%E9%81%93%E6%89%80%E6%9C%89%E7%9A%84%E6%AD%A3%E5%BC%A6%E6%88%96%E4%BD%99%E5%BC%A6%E5%87%BD%E6%95%B0%E6%98%AF%E6%AD%A3%E4%BA%A4%E7%9A%84%EF%BC%8C%E8%BF%99%E4%B8%80%E7%82%B9%E6%88%91%E4%BB%AC%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87%E7%AE%80%E5%8D%95%E7%9A%84%E9%AB%98%E6%95%B0%E7%9F%A5%E8%AF%86%E5%B0%B1%E5%8F%AF%E4%BB%A5%E8%AF%81%E6%98%8E%E5%AE%83%EF%BC%8C%E6%89%80%E4%BB%A5%E6%88%91%E4%BB%AC%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87%E5%85%B3%E8%81%94%E7%9A%84%E6%96%B9%E6%B3%95%E6%8A%8A%E5%8E%9F%E5%A7%8B%E4%BF%A1%E5%8F%B7%E5%88%86%E7%A6%BB%E5%87%BA%E6%AD%A3%E4%BD%99%E5%BC%A6%E4%BF%A1%E5%8F%B7%E3%80%82%E5%BD%93%E7%84%B6%EF%BC%8C%E5%85%B6%E5%AE%83%E7%9A%84%E6%AD%A3%E4%BA%A4%E5%87%BD%E6%95%B0%E4%B9%9F%E6%98%AF%E5%AD%98%E5%9C%A8%E7%9A%84%EF%BC%8C%E5%A6%82%EF%BC%9A%E6%96%B9%E6%B3%A2%E3%80%81%E4%B8%89%E8%A7%92%E6%B3%A2%E7%AD%89%E5%BD%A2%E5%BC%8F%E7%9A%84%E8%84%89%E5%86%B2%E4%BF%A1%E5%8F%B7%EF%BC%8C%E6%89%80%E4%BB%A5%E5%8E%9F%E5%A7%8B%E4%BF%A1%E5%8F%B7%E4%B9%9F%E5%8F%AF%E8%A2%AB%E5%88%86%E8%A7%A3%E6%88%90%E8%BF%99%E4%BA%9B%E4%BF%A1%E5%8F%B7%EF%BC%8C%E4%BD%86%E8%BF%99%E5%8F%AA%E6%98%AF%E8%AF%B4%E5%8F%AF%E4%BB%A5%E8%BF%99%E6%A0%B7%E5%81%9A%EF%BC%8C%E5%8D%B4%E6%98%AF%E6%B2%A1%E6%9C%89%E7%94%A8%E7%9A%84%E3%80%82%5Cn%5Cn%E4%B8%8B%E9%9D%A2%E6%98%AF%E5%AE%9E%E5%9F%9F%E5%82%85%E7%AB%8B%E5%8F%B6%E5%8F%98%E6%8D%A2%E7%9A%84BASIC%E8%AF%AD%E8%A8%80%E4%BB%A3%E7%A0%81%EF%BC%9A%5Cn%5Cn!%5B%5D(..%2Fimages%2F10-2-1%2F26.jpg)%5Cn%5Cn%E5%88%B0%E6%AD%A4%E4%B8%BA%E6%AD%A2%EF%BC%8C%E6%88%91%E4%BB%AC%E5%AF%B9%E5%82%85%E7%AB%8B%E5%8F%B6%E5%8F%98%E6%8D%A2%E4%BE%BF%E6%9C%89%E4%BA%86%E6%84%9F%E6%80%A7%E7%9A%84%E8%AE%A4%E8%AF%86%E4%BA%86%E5%90%A7%E3%80%82%E4%BD%86%E8%A6%81%E8%AE%B0%E4%BD%8F%EF%BC%8C%E8%BF%99%E5%8F%AA%E6%98%AF%E5%9C%A8%E5%AE%9E%E5%9F%9F%E4%B8%8A%E7%9A%84%E7%A6%BB%E6%95%A3%E5%82%85%E7%AB%8B%E5%8F%B6%E5%8F%98%E6%8D%A2%EF%BC%8C%E5%85%B6%E4%B8%AD%E8%99%BD%E7%84%B6%E4%B9%9F%E7%94%A8%E5%88%B0%E4%BA%86%E5%A4%8D%E6%95%B0%E7%9A%84%E5%BD%A2%E5%BC%8F%EF%BC%8C%E4%BD%86%E9%82%A3%E5%8F%AA%E6%98%AF%E4%B8%AA%E6%9B%BF%E4%BB%A3%E7%9A%84%E5%BD%A2%E5%BC%8F%EF%BC%8C%E5%B9%B6%E6%97%A0%E5%AE%9E%E9%99%85%E6%84%8F%E4%B9%89%EF%BC%8C%E7%8E%B0%E5%AE%9E%E4%B8%AD%E4%B8%80%E8%88%AC%E4%BD%BF%E7%94%A8%E7%9A%84%E6%98%AF%E5%A4%8D%E6%95%B0%E5%BD%A2%E5%BC%8F%E7%9A%84%E7%A6%BB%E6%95%A3%E5%82%85%E7%AB%8B%E5%8F%B6%E5%8F%98%E6%8D%A2%EF%BC%8C%E4%B8%94**%E5%BF%AB%E9%80%9F%E5%82%85%E7%AB%8B%E5%8F%B6%E5%8F%98%E6%8D%A2**%E6%98%AF%E6%A0%B9%E6%8D%AE%E5%A4%8D%E6%95%B0%E7%A6%BB%E6%95%A3%E5%82%85%E7%AB%8B%E5%8F%B6%E5%8F%98%E6%8D%A2%E6%9D%A5%E8%AE%BE%E8%AE%A1%E7%AE%97%E6%B3%95%E7%9A%84%EF%BC%8C%E5%9C%A8%E5%90%8E%E9%9D%A2%E6%88%91%E4%BB%AC%E5%85%88%E6%9D%A5%E5%A4%8D%E4%B9%A0%E4%B8%80%E4%B8%8B%E6%9C%89%E5%85%B3%E5%A4%8D%E6%95%B0%E7%9A%84%E5%86%85%E5%AE%B9%EF%BC%8C%E7%84%B6%E5%90%8E%E5%86%8D%E5%9C%A8%E7%90%86%E8%A7%A3%E5%AE%9E%E5%9F%9F%E7%A6%BB%E6%95%A3%E5%82%85%E7%AB%8B%E5%8F%B6%E5%8F%98%E6%8D%A2%E7%9A%84%E5%9F%BA%E7%A1%80%E4%B8%8A%E6%9D%A5%E7%90%86%E8%A7%A3%E5%A4%8D%E6%95%B0%E5%BD%A2%E5%BC%8F%E7%9A%84%E7%A6%BB%E6%95%A3%E5%82%85%E7%AB%8B%E5%8F%B6%E5%8F%98%E6%8D%A2%E3%80%82%22%7D\" id=\"0ffa5a09\"><div class=\"lake-codeblock-content\" style=\"border: 1px solid rgb(232, 232, 232); max-width: 750px; color: rgb(0, 0, 0); margin: 0px; padding: 0px; background: rgb(249, 249, 249);\"><div class=\"\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 16px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><pre class=\"cm-s-default\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">#### 四、   分解运算方法（DFT）\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">有三种完全不同的方法进行DFT：*一种方法是通过联立方程进行求解*, 从代数的角度看，要从N个已知值求N个未知值，需要N个联立方程，且N个联立方程必须是线性独立的，但这是这种方法计算量非常的大且极其复杂，所以很少被采用；*第二种方法是利用信号的相关性（correlation）*进行计算，这个是我们后面将要介绍的方法；*第三种方法是快速傅立叶变换（FFT）*，这是一个非常具有创造性和革命性的的方法，因为它大大提高了运算速度，使得傅立叶变换能够在计算机中被广泛应用，但这种算法是根据复数形式的傅立叶变换来实现的，它把N个点的信号分解成长度为N的频域，这个跟我们现在所进行的实域DFT变换不一样，而且这种方法也较难理解，这里我们先不去理解，等先理解了复数DFT后，再来看一下FFT。有一点很重要，那就是这三种方法所得的变换结果是一样的，经过实践证明，当频域长度为32时，利用相关性方法进行计算效率最好，否则FFT算法效率较高。现在就让我们来看一下相关性算法。\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">利用**第一种方法、信号的相关性**(correlation)可以从噪声背景中检测出已知的信号，我们也可以利用这个方法检测信号波中是否含有某个频率的信号波：把一个待检测信号波乘以另一个信号波，得到一个新的信号波，再把这个新的信号波所有的点进行相加，从相加的结果就可以判断出这两个信号的相似程度。如下图：\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">![](../images/10-2-1/22.jpg)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-1\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">上面a和 b两个图是待检测信号波，图a很明显可以看出是个3个周期的正弦信号波，图b的信号波则看不出是否含有正弦或余弦信号，图c和d都是个3个周期的正弦信号波，图e和f分别是a、b两图跟c、d两图相乘后的结果，图e所有点的平均值是0.5，说明信号a含有振幅为1的正弦信号c，但图f所有点的平均值是0，则说明信号b不含有信号d。这个就是通过信号相关性来检测是否含有某个信号的方法。\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">**第二种方法：** 相应地，我也可以通过把输入信号和每一种频率的正余弦信号进行相乘（**关联操作**），从而得到原始信号与每种频率的关联程度（即总和大小），这个结果便是我们所要的傅立叶变换结果，下面两个等式便是我们所要的计算方法：\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">![](../images/10-2-1/23.jpg)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">第二个式子中加了个负号，是为了保持复数形式的一致，*前面我们知道在计算*![](../images/10-2-1/24.jpg)*时又加了个负号*，所以这只是个形式的问题，并没有实际意义，你也可以把负号去掉，并在计算![](../images/10-2-1/25.jpg)时也不加负号。\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">这里有一点必须明白一个正交的概念：两个函数相乘，如果结果中的每个点的总和为0，则可认为这两个函数为正交函数。要确保关联性算法是正确的，则必须使得跟原始信号相乘的信号的函数形式是正交的，我们知道所有的正弦或余弦函数是正交的，这一点我们可以通过简单的高数知识就可以证明它，所以我们可以通过关联的方法把原始信号分离出正余弦信号。当然，其它的正交函数也是存在的，如：方波、三角波等形式的脉冲信号，所以原始信号也可被分解成这些信号，但这只是说可以这样做，却是没有用的。\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">下面是实域傅立叶变换的BASIC语言代码：\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">![](../images/10-2-1/26.jpg)\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">\n</span></span><span class=\"lake-preview-line\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"><span class=\"lake-preview-line-number lake-lm-pad-level-0\" style=\"color: rgb(191, 191, 191); margin: 0px 8px 0px 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\"></span><span class=\"lake-preview-codeblock-content\" style=\"color: rgb(89, 89, 89); margin: 0px; padding: 0px; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0);\">到此为止，我们对傅立叶变换便有了感性的认识了吧。但要记住，这只是在实域上的离散傅立叶变换，其中虽然也用到了复数的形式，但那只是个替代的形式，并无实际意义，现实中一般使用的是复数形式的离散傅立叶变换，且**快速傅立叶变换**是根据复数离散傅立叶变换来设计算法的，在后面我们先来复习一下有关复数的内容，然后再在理解实域离散傅立叶变换的基础上来理解复数形式的离散傅立叶变换。</span></span></pre></div></div></div></div>",
  "slug": 6759005,
  "title": "傅里叶变换算法、上.md"
}