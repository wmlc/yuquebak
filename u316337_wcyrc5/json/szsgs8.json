{
  "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-classic\" data-lake-element=\"root\"><h3 data-lake-id=\"46185f05a037bb0e24b3183b926569b8\" id=\"v92L8\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">握手的目标:</h3><p data-lake-id=\"925a098db886ef8e02250eb73b0cd15b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">三次握手的目标是使数据段的发送和接收同步。同时也向其他主机表明其一次可接收的数据量(窗口大小)，</p><p data-lake-id=\"3c6a67ad7c495d62bd3bf51ed87786e2\" style=\"text-indent: 2em; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">并建立 逻辑连接；&nbsp;</p><p data-lake-id=\"a3d1863137d7a64a294590c4c0df3ee5\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"background-color: transparent;\">同步 Sequence 序列号 ；</span></p><p data-lake-id=\"8295add25fb4cc07d1af0e63e3e74f8e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"background-color: transparent;\">交换 TCP 通讯参数&nbsp;</span></p><p data-lake-id=\"61abb86bfea57bfbab70caffb790ddef\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">\t\t\t\t\t\t\t</p><ul data-lake-id=\"3bb6aea0dbba8a1b98ebf85b8ff82d1d\" lake-indent=\"1\" style=\"list-style-type: none; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><ul data-lake-id=\"32f130a541b3b5fc2aa0aab477e52883\" lake-indent=\"0\" style=\"list-style-type: circle; margin: 0px; padding-left: 23px;\">\t\t\t\t\t\t</ul></ul><p data-lake-id=\"95159895c0066f5a202bf763be87a021\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t</p><h3 id=\"0YEuW\" data-lake-id=\"35a8b7cdedac09c7c7aa3da580ed51ca\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">TCP三次握手</h3><p data-lake-id=\"998f3e02beac6113e14e341c88be4340\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"f3fa9393d3a255e6923cfc7d2468c979\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">第一次握手：客户端A将标志位<span style=\"color: #F5222D;\">SYN</span>置为1,随机产生一个值为seq=J（J的取值范围为=1234567）的数据包到服务器，客户端A进入SYN_SENT状态，等待服务端B确认；（a等待b确认）</p><p data-lake-id=\"69f3fe2a096cea7265569c5844167a3a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"9e76e24718998dc0cf32ef5d1aa07858\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">第二次握手：服务端B收到数据包后由标志位SYN=1知道客户端A请求建立连接，服务端B将标志位<span style=\"color: #F5222D;\">SYN和ACK</span>都置为1，ack=J+1，随机产生一个值seq=K，并将该数据包发送给客户端A以确认连接请求，服务端B进入SYN_RCVD状态。（b告诉a已确认）</p><p data-lake-id=\"2dcc2fb1ecfc11afefc3bdca6a3acd0b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"f8dce8da61db40493a3b5e60f7f29bb7\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">第三次握手：客户端A收到确认后，检查ack是否为J+1，ACK是否为1，如果正确则将标志位<span style=\"color: #F5222D;\">ACK</span>置为1，ack=K+1，并将该数据包发送给服务端B，服务端B检查ack是否为K+1，ACK是否为1，如果正确则连接建立成功，客户端A和服务端B进入ESTABLISHED状态，完成三次握手，随后客户端A与服务端B之间可以开始传输数据了。（建立连接）</p><p data-lake-id=\"bd406606a7bfd7d5b625f34e8e0b1677\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span>\n</span></p><p data-lake-id=\"1b6fe910dcdf4bf71dfcdcde636b263c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"8c06ad45618ea53f36675ad59596f357\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">如图所示：</p><p data-lake-id=\"a805e84950816020e7a9d656f9681f19\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"bead08d505397273d93f4a20d2aa2367\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/png/491128/1587781148263-0431a639-54f3-48f3-898d-bfa40945fb45.png\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/png/491128/1587781148263-0431a639-54f3-48f3-898d-bfa40945fb45.png\" class=\"image lake-drag-image\" style=\"visibility: visible; border: none; box-shadow: none; width: 570px; height: 354px;\"></span></p><p data-lake-id=\"5b113e1fc35c0de9f212aff2feb0d8a6\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span>SYN用作同步 ，ACK用作确认</span></p><p data-lake-id=\"1c68b8ed035b1be63eae0371abdd4259\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span><br></span></p><h4 id=\"a025de0f\" data-lake-id=\"bed51d3fa615b8fc92eb4ef3302e49b1\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">为什需要三次握手？</h4><p data-lake-id=\"5facd778710a990a2767ffa6d96dc0c8\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"dc5cc38e940fec58adfa9eee746af202\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">《计算机网络》第四版中讲“三次握手”的目的是“为了防止已失效的连接请求报文段突然又传送到了服务端，因而产生错误”</p><p data-lake-id=\"d9c8f13f48ec391f7123b9cd1726ee00\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">书中的例子是这样的，“已失效的连接请求报文段”的产生在这样一种情况下：client发出的第一个连接请求报文段并没有丢失，而是在某个网络结点长时间的滞留了，以致延误到连接释放以后的某个时间才到达server。本来这是一个早已失效的报文段。但server收到此失效的连接请求报文段后，就误认为是client再次发出的一个新的连接请求。于是就向client发出确认报文段，同意建立连接</p><p data-lake-id=\"67d93c3c0ff958b9a7674cce207b9369\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"db8e09eb0349f9a1c6ab07aa1c35c919\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">假设不采用“三次握手”，那么只要server发出确认，新的连接就建立了。由于现在client并没有发出建立连接的请求，因此不会理睬server的确认，也不会向server发送数据。但server却以为新的运输连接已经建立，并一直等待client发来数据。这样，server的很多资源就白白浪费掉了。采用“三次握手”的办法可以防止上述现象发生。例如刚才那种情况，client不会向server的确认发出确认。server由于收不到确认，就知道client并没有要求建立连接。”。主要目的防止server端一直等待，浪费资源。</p><p data-lake-id=\"f5f296ae3a62ce72cda5205628edc75c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 id=\"2c2800c8\" data-lake-id=\"5211bf480221344ea937edb10f60809c\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">TCP四次挥手</h3><p data-lake-id=\"36f16c67f49813fa3a6382ae6592a228\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"7dc572079edd9662b4b495e72e64eae3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">第一次挥手：Client发送一个<span style=\"color: #F5222D;\">FIN</span>，用来关闭Client到Server的数据传送，Client进入FIN_WAIT_1状态。</p><p data-lake-id=\"6fd769f4b41337ca20b0c6d112e749e9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"fcf34ec754378a1171f62a84f9c375de\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">第二次挥手：Server收到FIN后，发送一个<span style=\"color: #F5222D;\">ACK</span>给Client，确认序号为收到序号+1（与SYN相同，一个FIN占用一个序号），Server进入CLOSE_WAIT状态。</p><p data-lake-id=\"4ad48cff341cda14e0f22f6fb43d5675\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"396524826931a9693351fbaf7e16193b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">第三次挥手：Server发送一个<span style=\"color: #F5222D;\">FIN</span>，用来关闭Server到Client的数据传送，Server进入LAST_ACK状态。</p><p data-lake-id=\"51e57f2b119e38462f7fdf2931d91aac\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"c9d078423545bf049525354aa077dcd0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">第四次挥手：Client收到FIN后，Client进入TIME_WAIT状态，接着发送一个<span style=\"color: #F5222D;\">ACK</span>给Server，确认序号为收到序号+1，Server进入CLOSED状态，完成四次挥手。</p><p data-lake-id=\"bc7e1f69442c96b9c519e1b71d352d2e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"41b5505d1d13d872c1b8a56003f7a48b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">如图所示：</p><p data-lake-id=\"6ead44b2ad00f8ead1856edd5e367480\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"66e8002cde0b1d5dfba868b4429e60dc\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span data-card-type=\"inline\" data-lake-card=\"image\"><img data-role=\"image\" src=\"https://cdn.nlark.com/yuque/0/2020/jpeg/491128/1587781148266-d9d9a7b3-7eda-4cb7-b1b1-12e03e9ec61d.jpeg\" data-raw-src=\"https://cdn.nlark.com/yuque/0/2020/jpeg/491128/1587781148266-d9d9a7b3-7eda-4cb7-b1b1-12e03e9ec61d.jpeg\" class=\"image lake-drag-image\" style=\"visibility: visible; border: none; box-shadow: none; width: 407px; height: 544px;\"></span></p><p data-lake-id=\"2929e80c15226bf446ba5953add1f249\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 data-lake-id=\"3dbf4877feda1aa9da64ed901c9013ee\" id=\"chE4j\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">TCP 状态码列表</h3><p data-lake-id=\"1470c95edb833e1a4c683b04528311ba\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"09678a9acfa38abae78b710420d92831\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #F5222D;\">LISTEN:</span> 服务启动后首先处于侦听LISTENING状态。&nbsp;</p><p class=\"\" data-lake-id=\"a39cbf505f6245c2976d2ae0cb51cedd\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"36c8bdf512e354c32b3ee79b5623bf44\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"background-color: transparent; letter-spacing: 0.008em; color: rgb(245, 34, 45);\">SYN_SENT</span><span style=\"background-color: transparent; letter-spacing: 0.008em;\">: 在发送连接请求后等待匹配的连接请求。通过 connect()函数向服务器发出一个同步SYNC信号后进入此状态。</span></p><p class=\"\" data-lake-id=\"d505f10a95cd0df436b66a3fc6750330\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"background-color: transparent; letter-spacing: 0.008em;\"><br></span></p><p data-lake-id=\"96ac82b1c4c4dc18bbec173ee27d47d7\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"background-color: transparent; letter-spacing: 0.008em;\"> </span></p><p data-lake-id=\"77eed005d0bd8d8d6696ffd3439fb542\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"color: #F5222D;\">SYN_RECEIVED</span><span style=\"background-color: transparent; letter-spacing: 0.008em;\">: 已经收到并发送同步SYNC信号之后等待确认ACK请求。&nbsp;</span></p><p class=\"\" data-lake-id=\"164019090062775045294a9c38f4be04\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"background-color: transparent; letter-spacing: 0.008em;\"><br></span></p><p data-lake-id=\"699f4ce43263d97b1e7e387a8467b77a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"background-color: transparent; letter-spacing: 0.008em; color: rgb(245, 34, 45);\">ESTABLISHED</span><span style=\"background-color: transparent; letter-spacing: 0.008em;\"> </span><span style=\"background-color: transparent; letter-spacing: 0.008em;\">: 连接已经建立，表示 2 台机器可以相互通信，此时连接两端是平等的。&nbsp;</span></p><p class=\"\" data-lake-id=\"3a99bfd06f4f1f6130ebf0b2ebe4fd6f\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"background-color: transparent; letter-spacing: 0.008em;\"><br></span></p><p data-lake-id=\"3e13340c87f608dd14bf1af1b83d91ca\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"background-color: transparent; letter-spacing: 0.008em; color: rgb(245, 34, 45);\">FIN_WAIT_1</span><span style=\"background-color: transparent; letter-spacing: 0.008em;\"> : 主动关闭端调用close()函数发出 FIN 请求包，表示本方的数据发送全部结束，等待 TCP 连接另一端的确认包或FIN</span>请求包。&nbsp;</p><p class=\"\" data-lake-id=\"1f7226134fe6cadad70fb1a29f7a3a64\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"4f7dd3e436f677035cf321413e0996ce\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"background-color: transparent; letter-spacing: 0.008em; color: rgb(245, 34, 45);\">FIN_WAIT_2</span><span style=\"background-color: transparent; letter-spacing: 0.008em;\"> : 主动关闭端在FIN_WAIT_1状态下收到确认包，进入等待远程 TCP 的连接终止请求的半关闭状态，这时可以接收数</span>据，但不再发送数据。&nbsp;</p><p class=\"\" data-lake-id=\"a72d30625ba53e811040c94141ad0147\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"c8fc81c759875c82e502de990e5dd819\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"background-color: transparent; letter-spacing: 0.008em; color: rgb(245, 34, 45);\">CLOSE_WAIT</span><span style=\"background-color: transparent; letter-spacing: 0.008em;\"> : 被动关闭端接到FIN后，就发出ACK以回应FIN请求，并进入等待本地用户的连接终止请求的半关闭状态，这时可以&nbsp;</span>发送数据，但不再接收数据。&nbsp;</p><p class=\"\" data-lake-id=\"0865b42cb5792a1d248f0396eaaf9e15\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"6609acffc9f62ca8b0d642e4f0fa983d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"background-color: transparent; letter-spacing: 0.008em; color: rgb(245, 34, 45);\">CLOSING</span><span style=\"background-color: transparent; letter-spacing: 0.008em;\"> </span><span style=\"background-color: transparent; letter-spacing: 0.008em;\">: 双方同时发出FIN，同时进入等待对方对连接终止FIN的确认ACK时进入的状态，极少见。</span></p><p data-lake-id=\"2d37e32f4c5fb853c385acd6fe2c30c9\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"background-color: transparent; letter-spacing: 0.008em;\">&nbsp;</span></p><p data-lake-id=\"c15ef7aeb524617c416e0b2016527942\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"background-color: transparent; letter-spacing: 0.008em; color: rgb(245, 34, 45);\">LAST_ACK</span><span style=\"background-color: transparent; letter-spacing: 0.008em;\"> </span><span style=\"background-color: transparent; letter-spacing: 0.008em;\">: 被动关闭端全部数据发送完成之后，向主动关闭端发送FIN，进入等待确认包的状态。&nbsp;</span></p><p class=\"\" data-lake-id=\"894237f4da9a7d25a90f5b803f336a37\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"background-color: transparent; letter-spacing: 0.008em;\"><br></span></p><p data-lake-id=\"6b1e8439dc20fb717f28ebe99afe3c46\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"background-color: transparent; letter-spacing: 0.008em; color: rgb(245, 34, 45);\">TIME_WAIT</span><span style=\"background-color: transparent; letter-spacing: 0.008em;\"> </span><span style=\"background-color: transparent; letter-spacing: 0.008em;\">: 主动关闭端接收到FIN后，就发送ACK包，等待足够时间(2 倍MSL时间)以确保被动关闭端收到了终止请求的确认包。&nbsp;</span></p><p class=\"\" data-lake-id=\"e90a15f3aff55d40aeca6090d22b043e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"background-color: transparent; letter-spacing: 0.008em;\"><br></span></p><p data-lake-id=\"a945080a96ec5d7dccd07410548e26ac\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><span style=\"background-color: transparent; letter-spacing: 0.008em; color: rgb(245, 34, 45);\">CLOSED</span><span style=\"background-color: transparent; letter-spacing: 0.008em;\"> : 连接关闭，代表双方无任何连接状态。​</span></p><p data-lake-id=\"58a1858722532b843b759aab1c555b3e\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"72f82359bf5bbe5a618b4c0acfe520de\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">\n\t\t\t\t\t\t\t</p><ol data-lake-id=\"487ccdc712dab70bedd42b1e8498c07f\" lake-indent=\"1\" style=\"list-style-type: none; margin: 0px; padding-left: 23px; font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word;\"><ol data-lake-id=\"59bda535a4213303372993caeda6565e\" lake-indent=\"0\" style=\"list-style-type: lower-alpha; margin: 0px; padding-left: 23px;\">\n\t\t\t\t\t\t</ol></ol><p data-lake-id=\"c4f9654aa44a31c13b403560b43cf4ab\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t</p><h3 id=\"06f16428\" data-lake-id=\"2cb5467b622102b95a25c9e138dc8c9d\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">为什么建立连接是三次握手，而关闭连接却是四次挥手呢？</h3><p data-lake-id=\"b25124a7c519b896d38b0f07aa2d8fcc\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"270341594851569c7d652b833c1a91d3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">这是因为服务端在LISTEN状态下，收到建立连接请求的SYN报文后，把ACK和SYN放在一个报文里发送给客户端。而关闭连接时，当收到对方的FIN报文时，仅仅表示对方不再发送数据了但是还能接收数据，己方也未必全部数据都发送给对方了，所以己方可以立即close，也可以发送一些数据给对方后，再发送FIN报文给对方来表示同意现在关闭连接，因此，己方ACK和FIN一般都会分开发送。</p></div>",
  "slug": 6442800,
  "title": "TCP握手介绍"
}