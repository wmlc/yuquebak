{
  "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-classic\" data-lake-element=\"root\"><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">运输层分为两个协议UDP和TCP，UDP是一个不可靠的协议，也就是说他仅仅提供复用和分用的功能但是对于比特差错或者丢弃不做任何处理。</p><p data-lake-id=\"227de9e8ed97893409c56cbb7a938726\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"428186309a4c4b360a36c5071cf7c510\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">TCP提供一种面向连接的、可靠的字节流服务，发送方发送的数据到达接收方的时候不会发生错误，不会丢失，不会乱序。</p><p data-lake-id=\"c5bbaa233ab44d166ba1949a6bab82fe\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"fee7a9d00859e7bb6ff03e8a4f85c940\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">面向连接：意味着两个使用TCP的应用（通常是一个客户和一个服务器）在彼此交换数据之前必须先建立一个TCP连接。在一个TCP连接中，仅有两方进行彼此通信。广播和多播不能用于TCP。</p><p data-lake-id=\"4913888effdb80562e71e51b6e7ef796\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h3 id=\"5327b184\" data-lake-id=\"f33eef4e3d9371667834f83a2efe222a\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 20px; line-height: 28px;\">TCP通过下列方式来提供可靠性：</h3><p data-lake-id=\"75c9abf1ee5595a1a4faec51f28ea2b0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h4 id=\"0f4302e9\" data-lake-id=\"5f561679554b6390580b49d22d21bcc1\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">三次握手：</h4><p data-lake-id=\"a26a7324a8f485c32768a123f15ac8b4\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"b7fc0166816ae9d3469a7a9b404b037c\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">通过三次握手建立可靠地通信连接</p><p data-lake-id=\"db5b9b275bd7617076fdec1681d27333\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h4 id=\"0eb5f229\" data-lake-id=\"84347446c280d1820b98a93ad50b0537\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">合理截断数据包：</h4><p data-lake-id=\"9a6c4f042847da6a4d237c7be4f8ce07\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"6cc778a19304824d424c7594e9457cc6\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">应用数据被分割成TCP认为最适合发送的数据块,即将数据截断为合理的长度。这和UDP完全不同，应用程序产生的数据报长度将保持不变。</p><p data-lake-id=\"b4f0239ccb3810c424bac5cb1bce881b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h4 id=\"8c42ad5e\" data-lake-id=\"fcd09b7c97bd4f150e2abfe6d31fa061\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">超时重发：</h4><p data-lake-id=\"eb40d97ca32bd6b2ed46b63a8ba87d7d\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"fe844bc211dd3540681cee4d7fb82296\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">当TCP发出一个段后，它启动一个定时器，等待目的端确认收到这个报文段。如果不能及时收到一个确认，将重发这个报文段。</p><p data-lake-id=\"e3a3d61c808b763662fb87d2804e1a27\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h4 id=\"ae65568b\" data-lake-id=\"8aac33c1b4407c78312469da67cc6a84\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">包校验确认：</h4><p data-lake-id=\"8d9175c0f1ea97b46aea7126d03521eb\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"61030e5d5a5c2af5570ce388e2110dfa\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">当TCP收到发自TCP连接另一端的数据，它将发送一个确认响应。这个确认不是立即发送，通常将推迟几分之一秒，对包做完整校验。</p><p data-lake-id=\"b847442521f35d27a082842bf1588473\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h4 id=\"6c687cb1\" data-lake-id=\"dc5b994e119f9750145eee3eee3085a1\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">差错检测：</h4><p data-lake-id=\"70b5e7119c369edf91419dab94bdfcf8\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"55e7f0cdbcfdef28d2aaca97da3a5169\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">也就是引入校验和。在TCP的首部中有一个占据16为的空间用来放置校验和的结果。在源主机的运输层开始接受到一个从应用进程传下来的数据的时候，会将他封装成一个报文段，加上至少20字节的首部。同时会将这个报文段首部和数据还有伪首部部分一起根据取反码和的形式计算出校验和添加到首部中。传输到目的主机的运输层之后，会计算这个通过这个校验和检查是否存在比特差错。这是一个端到端的检验和，目的是检测数据在传输过程中的任何变化。如果收到段的检验和有差错，TCP将丢弃这个报文段和不确认收到此报文段。校验出包有错，丢弃报文段，不给出响应，TCP发送数据端，超时时会重发数据。</p><p data-lake-id=\"0e4d66e7b4f9f1fc16d48f3a24d87e0a\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h4 id=\"6f798a52\" data-lake-id=\"3896cb6c90537d0799055aaf08c2726f\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">失序数据重新排序：</h4><p data-lake-id=\"316a1d358acf7e39f79a3b92b58beb15\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"dcdf50842c58e9dc3b26b7126498c443\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">既然TCP报文段作为IP数据报来传输，而IP数据报的到达可能会失序，因此TCP报文段的到达也可能会失序。如果必要，TCP将对收到的数据进行重新排序，将收到的数据以正确的顺序交给应用层。</p><p data-lake-id=\"17a253e589484b62234298efc5bb048b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><h4 id=\"e467d286\" data-lake-id=\"098b794c5e947d851f32abea71e140cc\" style=\"padding: 7px 0px; margin: 0px; font-weight: 700; font-size: 16px; line-height: 24px;\">能够丢弃重复数据：</h4><p data-lake-id=\"0b267f3ef983e8f1c5e61ade28e3e8a8\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"27d39c587aea132a659c844ff180c9ef\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">既然IP数据报会发生重复，TCP的接收端必须丢弃重复的数据。</p><p data-lake-id=\"76c194aa6bdc2f4edd03e2577830c836\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"9f97e2d07bd9159e0523937df307d443\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">####可以进行流量控制：</p><p data-lake-id=\"f040c98c663eff64ce0d07b6bb7fd8b3\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">\nTCP还能提供流量控制。TCP连接的每一方都有固定大小的缓冲空间。TCP的接收端只允许另一端发送接收端缓冲区所能接纳的数据。这将防止较快主机致使较慢主机的缓冲区溢出。TCP使用的流量控制协议是可变大小的滑动窗口协议。</p><p data-lake-id=\"82dcded02883878d00b95997f063fd0b\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"7fb3a251ee3fefa495d89df8d01f6bdd\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">字节流服务：两个应用程序通过TCP连接交换8bit字节构成的字节流。TCP不在字节流中插入记录标识符。我们将这称为字节流服务（bytestreamservice）。</p><p data-lake-id=\"070df72c446573a5d7212f6b25b98ebd\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\"><br></p><p data-lake-id=\"98fed0df18c0e98677a076ecdcb78fb0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">TCP对字节流的内容不作任何解释:TCP对字节流的内容不作任何解释。TCP不知道传输的数据字节流是二进制数据，还是ASCII字符、EBCDIC字符或者其他类型数据。对字节流的解释由TCP连接双方的应用层解释。</p></div>",
  "slug": 6442805,
  "title": "TCP是如何保证数据可靠传输?"
}